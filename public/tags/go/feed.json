
{
    "version": "https://jsonfeed.org/version/1.1",
    "title": "go on prma",
    "home_page_url": "https://prma.dev/tags/go/",
    "feed_url": "https://prma.dev/tags/go/feed.json",
    "authors": [{
        "name": {"email":"prma.dev@protonmail.com","name":"Perma"},
    }],
    "items": [ {
            "title": "Go Vs Rust readability",
            "id": "https://prma.dev/posts/go_vs_rust_readability/",
            "url": "https://prma.dev/posts/go_vs_rust_readability/",
            "summary": "Intro Traditionally speaking, Go and Rust are not direct competitors on many fronts. Each take different trade-offs. But more often than not, you might need to choose one over the other. It is compared in the niche the other fails. Like low-level system development, which Rust easily rules. Or maybe dev-ops tooling which Go is easily good at it.\nHowever, there are many overlaps in their use case. Think high-performance web-servers.",
            "content_html": "\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eTraditionally speaking, \u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n and \u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n are not direct competitors on many fronts. Each take different trade-offs. But more often than not, you might need to choose one over the other. It is compared in the niche the other fails. Like low-level system development, which \u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n easily rules. Or maybe dev-ops tooling which \u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n is easily good at it.\u003c/p\u003e\n\u003cp\u003eHowever, there are many overlaps in their use case. Think high-performance web-servers. In those spaces, we should compare other things. Like readability and maintainability of language. In this post, I want to share my thoughts on readability.\u003c/p\u003e\n\u003ch2 id=\"tl-dr\"\u003eTl;DR\u003c/h2\u003e\n\u003cp\u003e\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n is not less maintainable than \u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n because \u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n is less readable.\u003c/p\u003e\n\u003ch2 id=\"what-i-do-not-disagree-with\"\u003eWhat I do not disagree with\u003c/h2\u003e\n\u003cp\u003eJust to be clear, although I\u0026rsquo;m making a case for \u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n and arguing that readability should not be as much concern, I would like to make clear that I\u0026rsquo;m not arguing against these common-sense statements:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n is more readable.\u003c/li\u003e\n\u003cli\u003e\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n has less overhead for people with no previous experience with language.\u003c/li\u003e\n\u003cli\u003eReadability is generally what you want.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"why-readability-is-good\"\u003eWhy readability is good\u003c/h2\u003e\n\u003cp\u003eEnglish is more readable than any programming language. However, readability is not the only measure that we are using for chosing a language.\u003c/p\u003e\n\u003cp\u003eReadability and clearity are not inherently good, rather it is a proxy for something else we value: A readable code helps us understand the flow of information in order to \u003cstrong\u003eunderstand its logic\u003c/strong\u003e, \u003cstrong\u003ecapture its bugs\u003c/strong\u003e and \u003cstrong\u003eextend it\u003c/strong\u003e, easier. A line of code is read in many situations:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eI want to find out how a piece of code can give rise to a specific runtime bug.\u003c/li\u003e\n\u003cli\u003eI want to audit it to see if it exposes any specific vulnerability, data-race, etc.\u003c/li\u003e\n\u003cli\u003eI want to add features to it, and I want to know where and how I should plug the new functionality to.\u003c/li\u003e\n\u003cli\u003eI want to make a code more robust, document it and make it more available for other people by refactoring it.\u003c/li\u003e\n\u003cli\u003eI want to review the code of my colleague to see if a set of fresh eyes could capture a new bug, or an inconsistent styling with the rest of the codebase.\u003c/li\u003e\n\u003cli\u003eI want to understand what a code base does. Maybe I\u0026rsquo;m trying to see if a  software is spying on me, or maybe I\u0026rsquo;m trying to understand the way it calculated my taxes.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThese are all noble pursuits. And in all these cases, readability is vital in preventing disasters and better experience in onboarding others.\n\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n\u0026rsquo;s readability is probably one of its best features. At my current and previous jobs, I have had to jump into different code bases with different levels of legacy and problematic codebases where junior developers with no-idea of idiomatic ways of coding \u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n left their projects without any context for the next developer.\nSuch low quality codes should take forever for one to decode. However, because of the beautifully simple syntax of \u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n, I could start to be productive and sending PRs in less than a day. Have you seen a codebase where all the back-end code was coded by a narcissistic lone-wolf meth-addict? Well, I have, and it\u0026rsquo;s an absolute shit-show. Yet, I committed my first edits in 3 hours. \u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n is excellent at that. And I can understand how a huge tech company with very quick employee turn-over can give rise to such language. Kudos to the \u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n team.\u003c/p\u003e\n",
            "date_published": "2023-04-14T23:49:00+03:30"
        }
    ]
    
}
