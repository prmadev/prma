<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>functional-programming on prma</title>
    <link>https://prma.dev/tags/functional-programming/</link>
    <description>Recent content in functional-programming on prma</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>prma.dev@protonmail.com (Perma)</managingEditor>
    <webMaster>prma.dev@protonmail.com (Perma)</webMaster>
    <copyright>CC v.4</copyright>
    <lastBuildDate>Sun, 09 Apr 2023 10:44:00 +0330</lastBuildDate><atom:link href="https://prma.dev/tags/functional-programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Moving in Rust is Pure</title>
      <link>https://prma.dev/posts/moving_is_pure/</link>
      <pubDate>Sun, 09 Apr 2023 10:44:00 +0330</pubDate>
      <author>prma.dev@protonmail.com (Perma)</author>
      <guid>https://prma.dev/posts/moving_is_pure/</guid>
      <description>Intro The act of moving arguments within Rust &amp;rsquo;s functions serves as a compelling means to uphold the purity of the function. By embracing this practice, we ensure that the function operates on unique ownership of its inputs, preserving the integrity and immutability of data, which are fundamental tenets of functional programming.
Moving a Variable to a Function in Rust Doesn&amp;rsquo;t Make It Impure So as an introduction, if you don&amp;rsquo;t know Rust .</description>
    </item>
    
    <item>
      <title>Pure Rust</title>
      <link>https://prma.dev/posts/pure_rust/</link>
      <pubDate>Sat, 25 Mar 2023 22:36:00 +0330</pubDate>
      <author>prma.dev@protonmail.com (Perma)</author>
      <guid>https://prma.dev/posts/pure_rust/</guid>
      <description>Intro If you are not familiar with Functional Programming FP, you are in for a ride. I will try to explain FP in more practical terms.
A definition to work with FP is a declarative way of writing a program that consists mostly of pure functions that operate on and produce immutable data. That was many other unfamiliar words. Let&amp;rsquo;s make it concrete.
Making it more concrete Here is a function in Rust that we will work on:</description>
    </item>
    
  </channel>
</rss>
