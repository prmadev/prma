
{
    "version": "https://jsonfeed.org/version/1.1",
    "title": "Posts on prma",
    "home_page_url": "https://prma.dev/posts/",
    "feed_url": "https://prma.dev/posts/feed.json",
    "items": [ {
            "title": "Python And NixOS",
            "id": "https://prma.dev/posts/python_and_nixos/",
            "url": "https://prma.dev/posts/python_and_nixos/",
            "summary": "Me, whining about Python on NixOS",
            "content_html": "\u003cp\u003eThe problems surrounding \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.python.org/\"\u003ePython\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n programs on NixOS seem never-ending.\nI often have to refrain from installing most \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.python.org/\"\u003ePython\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n programs.\nOn each update, another one of them breaks during installation â€“ either their tests don\u0026rsquo;t pass, or their dependencies fail in some way.\u003c/p\u003e\n\u003cp\u003eAnd to be honest, I give the benefit of the doubt to NixOS, seeing its result with other languages, and knowing what I know about pip.\u003c/p\u003e\n",
            "date_published": "2023-11-02T11:03:07+03:30"
        }, {
            "title": "Test of 10x Developer",
            "id": "https://prma.dev/posts/test-of-10x-devleopers/",
            "url": "https://prma.dev/posts/test-of-10x-devleopers/",
            "summary": "The true test of 10x developer is that you put two of them together, each debugging each others code, then you if they kept their 10x status, they are the true 10x developer. My guess would be that their population will reduce to less than that of unicorns'.",
            "content_html": "\u003cp\u003eThe true test of 10x developer is that you put two of them together, each debugging each others code, then you if they kept their 10x status, they are the true 10x developer.\nMy guess would be that their population will reduce to less than that of unicorns'.\u003c/p\u003e\n",
            "date_published": "2023-10-16T23:10:00+03:30"
        }, {
            "title": "Usage Restriction of Software Licenses",
            "id": "https://prma.dev/posts/usage-restriction-software-licenses/",
            "url": "https://prma.dev/posts/usage-restriction-software-licenses/",
            "summary": "Please think twice before saying, usage restriction is good because you might want to prevent someone from using your tool for war, crime, etc.\nLike, you know that a poorly enforced license won\u0026rsquo;t deter a person in that situation from using your software, right?\nThere are probably better arguments for including usage restrictions in a software license; this one is a terrible one.",
            "content_html": "\u003cp\u003ePlease think twice before saying, \u003cq cite=\"people\"\u003eusage restriction is good because you might want to prevent someone from using your tool for war, crime, etc.\u003c/q\u003e\u003c/p\u003e\n\u003cp\u003eLike, you know that a poorly enforced license won\u0026rsquo;t deter a person in that situation from using your software, right?\u003c/p\u003e\n\u003cp\u003eThere are probably better arguments for including usage restrictions in a software license; this one is a terrible one.\u003c/p\u003e\n",
            "date_published": "2023-10-16T23:05:00+03:30"
        }, {
            "title": "Centralization Around GitHub",
            "id": "https://prma.dev/posts/github-centralization/",
            "url": "https://prma.dev/posts/github-centralization/",
            "summary": "I find the situation around GitHub centralization distressing. And this extreme relience on GitHub is worrying. Maybe in time things change. But the moment I find a job and thus don\u0026rsquo;t need to keep my repos on GitHub anymore, I would like to move to a more federated forge. Codeberg seems like the closest option. I will just simply mirror my commits to GitHub for the time being, slowly retiring them when I\u0026rsquo;m sure that codeberg remotes have the necessary configurations and flows that are needed.",
            "content_html": "\u003cp\u003eI find the situation around GitHub centralization distressing.\nAnd this extreme relience on GitHub is worrying.\nMaybe in time things change.\nBut the moment I find a job and thus don\u0026rsquo;t need to keep my repos on GitHub anymore, I would like to move to a more federated forge.\nCodeberg seems like the closest option.\nI will just simply mirror my commits to GitHub for the time being, slowly retiring them when I\u0026rsquo;m sure that codeberg remotes have the necessary configurations and flows that are needed.\nI don\u0026rsquo;t think i can retire my account though. Every place I worked or want to work, are using GitHub.\nI cannot but worry about the same amount of enshitification that twitter and reddit has taken, to also come for GitHub.\u003c/p\u003e\n",
            "date_published": "2023-10-16T23:04:00+03:30"
        }, {
            "title": "I hate Jira",
            "id": "https://prma.dev/posts/i-hate-jira/",
            "url": "https://prma.dev/posts/i-hate-jira/",
            "summary": "I absolutely hate Jira. It is when you spend hours of valuable time, prioritizing tasks that take less time doing than setting them on Jira.",
            "content_html": "\u003cp\u003eI absolutely hate Jira. It is when you spend hours of valuable time, prioritizing tasks that take less time doing than setting them on Jira.\u003c/p\u003e\n",
            "date_published": "2023-10-16T23:04:00+03:30"
        }, {
            "title": "O'Reilly Book Covers",
            "id": "https://prma.dev/posts/oreilly-book-covers/",
            "url": "https://prma.dev/posts/oreilly-book-covers/",
            "summary": "There is a retired burned out offended wild life photographer out there responsible for the O\u0026rsquo;Reilly\u0026rsquo;s book covers, after they were told \u0026ldquo;Your a photographer, that\u0026rsquo;s the same thing as graphic designer, give us 500 book covers, here is $1.\u0026rdquo;",
            "content_html": "\u003cp\u003eThere is a retired burned out offended wild life photographer out there responsible for the O\u0026rsquo;Reilly\u0026rsquo;s book covers, after they were told \u0026ldquo;Your a photographer, that\u0026rsquo;s the same thing as graphic designer, give us 500 book covers, here is $1.\u0026rdquo;\u003c/p\u003e\n",
            "date_published": "2023-10-16T23:04:00+03:30"
        }, {
            "title": "Older, Better Technologies",
            "id": "https://prma.dev/posts/older-better-technologies/",
            "url": "https://prma.dev/posts/older-better-technologies/",
            "summary": "It is very illuminating to see that using older style technologies, may lead to better experience. This just goes to show that many of the features and complexity and progress are not for people, but for profit of a few. That, of course, is a wild speculation of the highest order.",
            "content_html": "\u003cp\u003eIt is very illuminating to see that using older style technologies, may lead to better experience.\nThis just goes to show that many of the features and complexity and progress are not \u003cem\u003efor people\u003c/em\u003e, but for profit of a few.\nThat, of course, is a wild speculation of the highest order.\u003c/p\u003e\n",
            "date_published": "2023-10-16T23:04:00+03:30"
        }, {
            "title": "Prototyping in Software development",
            "id": "https://prma.dev/posts/prototying-software-development/",
            "url": "https://prma.dev/posts/prototying-software-development/",
            "summary": "I think when you are proposing a fast prototyping phase in programming, you should he able to answer these questions:\nWhat don\u0026rsquo;t we know that we hope to find out with this prototype?\nWhy is this the best approach for finding the answer to that question.\nWhen is the prototype going to be deleted?\nIf you are cannot answer to these questions, what you are proposing is not a prototype, it is prototype quality end product.",
            "content_html": "\u003cp\u003eI think when you are proposing a fast prototyping phase in programming, you should he able to answer these questions:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eWhat don\u0026rsquo;t we know that we hope to find out with this prototype?\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWhy is this the best approach for finding the answer to that question.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWhen is the prototype going to be deleted?\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eIf you are cannot answer to these questions, what you are proposing is not a prototype, it is prototype quality end product. A knock off, if you will. A bad practice distilled.\u003c/p\u003e\n",
            "date_published": "2023-10-16T23:04:00+03:30"
        }, {
            "title": "Rust Skills Transferability",
            "id": "https://prma.dev/posts/rust-skills-transferability/",
            "url": "https://prma.dev/posts/rust-skills-transferability/",
            "summary": "While the skills learned in Rust , like working with the borrow checker, may seem limited to Rust itself, the claim of their intransferability is somewhat overstated. Understanding the borrow checker is specific to languages using it, but the approaches it encourages are typically advanced and valued by experienced engineers. And often, it is evidenced by the patterns that are simplest to implement. The obvious exception to that is unwrap() and expect().",
            "content_html": "\u003cp\u003eWhile the skills learned in \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, like working with the \u003cem\u003eborrow checker\u003c/em\u003e, may seem limited to \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n itself, the claim of their intransferability is somewhat overstated. Understanding the borrow checker is specific to languages using it, but the approaches it encourages are typically advanced and valued by experienced engineers.\nAnd often, it is evidenced by the patterns that are simplest to implement.\nThe obvious exception to that is \u003ccode\u003eunwrap()\u003c/code\u003e and \u003ccode\u003eexpect()\u003c/code\u003e. Even though the ? operator is an step towards simplifying that process, it is undeniable that the hassel of creating and managing errors is not simpler than the extra 8 characters introduced by the \u003ccode\u003e.unwrap()\u003c/code\u003e\u003c/p\u003e\n",
            "date_published": "2023-10-16T23:04:00+03:30"
        }, {
            "title": "Rust's Productivity",
            "id": "https://prma.dev/posts/rust-productivity/",
            "url": "https://prma.dev/posts/rust-productivity/",
            "summary": "I think the best way to characterize Rust \u0026rsquo;s productivity, is to put it on a quality axis.\nIf you want low quality code (prototyping, etc) rust is much less productive than the alternative.\nFor medium level of quality, Rust is similar to others.\nFor high quality code, Rust is much more productive than any alternatives.\nQuality is intentionally vague, to encapsulate performance, leanness, documentation, and security.",
            "content_html": "\u003cp\u003eI think the best way to characterize \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u0026rsquo;s productivity, is to put it on a quality axis.\u003c/p\u003e\n\u003cp\u003eIf you want low quality code (prototyping, etc) rust is much less productive than the alternative.\u003c/p\u003e\n\u003cp\u003eFor medium level of quality, \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is similar to others.\u003c/p\u003e\n\u003cp\u003eFor high quality code, \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is much more productive than any alternatives.\u003c/p\u003e\n\u003cp\u003eQuality is intentionally vague, to encapsulate performance, leanness, documentation, and security.\u003c/p\u003e\n",
            "date_published": "2023-10-16T23:04:00+03:30"
        }, {
            "title": "Dynamic Linking is the Wrong solution",
            "id": "https://prma.dev/posts/dynamic-linking-the-wrong-solution/",
            "url": "https://prma.dev/posts/dynamic-linking-the-wrong-solution/",
            "summary": "Dynamic linking for the reason of security is the wrong solution, only propagating the problem of language and application developers to the downstream package distrobuters. It is basically saying, yeah, I wrote this package with this language and dependencies, but you will be the one paying for my choice of technology. Of course, down stream people also shouldn\u0026rsquo;t have accommodated these softwares. Except they did and now, there are multitudes of ecosystems operating this way.",
            "content_html": "\u003cp\u003eDynamic linking for the reason of security is the wrong solution, only propagating the problem of language and application developers to the downstream package distrobuters.\nIt is basically saying, yeah, I wrote this package with this language and dependencies, but you will be the one paying for my choice of technology.\nOf course, down stream people also shouldn\u0026rsquo;t have accommodated these softwares. Except they did and now, there are multitudes of ecosystems operating this way.\u003c/p\u003e\n",
            "date_published": "2023-10-16T23:03:00+03:30"
        }, {
            "title": "ADHD not Being Real",
            "id": "https://prma.dev/posts/adhd-not-real/",
            "url": "https://prma.dev/posts/adhd-not-real/",
            "summary": "ADHD is not real. It is just unmotivated kids needing more structure. \u0026ndash; Some lady today\nTherefore:\nCancer is not real. It is just overly horny cells needing to chill the fuck down. \u0026ndash; Probably the same lady, assuming no double standards",
            "content_html": "\u003cblockquote\u003e\n\u003cp\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Attention-Deficit/Hyperactivity Disorder\"\u003eADHD\u003c/abbr\u003e is not real.\nIt is just unmotivated kids needing more structure.\n\u0026ndash; Some lady today\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eTherefore:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCancer is not real.\nIt is just overly horny cells needing to chill the fuck down.\n\u0026ndash; Probably the same lady, assuming no double standards\u003c/p\u003e\n\u003c/blockquote\u003e\n",
            "date_published": "2023-10-16T19:39:00+03:30"
        }, {
            "title": "Missing Rust Blogpost",
            "id": "https://prma.dev/posts/missing-rust-post/",
            "url": "https://prma.dev/posts/missing-rust-post/",
            "summary": "There is a blog post missing in the Rust sphere: How to not obssess over performance gain and improve changeability of Rust applications.\nIn other words, imagin that you want move a function used in one file to another. How would you do that in under ten minutes?",
            "content_html": "\u003cp\u003eThere is a blog post missing in the Rust sphere:\n\u003cem\u003eHow to not obssess over performance gain and improve changeability of \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n applications.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIn other words, imagin that you want move a function used in one file to another.\nHow would you do that in under ten minutes?\u003c/p\u003e\n",
            "date_published": "2023-10-16T18:57:00+03:30"
        }, {
            "title": "The Tragedy of The Tech-Stacks",
            "id": "https://prma.dev/posts/tragedy_of_the_tech_stacks/",
            "url": "https://prma.dev/posts/tragedy_of_the_tech_stacks/",
            "summary": "Intro Back in 1958, there was this thinker named Garrett Hardin who kicked off his well-known piece titled \u0026ldquo;The Tragedy of the Commons\u0026rdquo; in the following way:\nAt the end of a thoughtful article on the future of nuclear war, Weisner and York concluded that \u0026ldquo;Both sides of the arms race are \u0026hellip; confronted by the dillema of steadily increasing military power and steadily decreasing natonal security. It is our considered our professional judgment that this delimma has not professional technical solution.",
            "content_html": "\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eBack in 1958, there was this thinker named \u003cspan class=\"person p-name\"\u003eGarrett Hardin\u003c/span\u003e who kicked off his well-known piece titled \u0026ldquo;The Tragedy of the Commons\u0026rdquo; in the following way:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAt the end of a thoughtful article on the future of nuclear war, Weisner and York concluded that \u0026ldquo;Both sides of the arms race are \u0026hellip; confronted by the dillema of steadily increasing military power and steadily decreasing natonal security. It is our considered our professional judgment that this delimma has not professional technical solution. If the great powers continue to look for solutions in the area of science and technology only, the result will be to worsen the situation.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThen, \u003cspan class=\"person p-name\"\u003eHardin\u003c/span\u003e goes on to rattle the foundations by delving into a colossal issue - the challenge of population expansion. He breaks it down by saying that when you have a shared resource, and each individual aims to squeeze out the most benefit for themselves, the result is a harm inflicted upon everyone, even the very ones taking those actions.\u003c/p\u003e\n\u003cp\u003eNow, picture this famous analogy. Imagine a stretch of grassland, claimed by three farmers. Each of them brings their cow out to graze on it daily. Sounds reasonable, right? But then, one fortunate farmer\u0026rsquo;s cow becomes pregnant. This stroke of luck leaves him with two cows, effectively doubling his profits. Observing this triumph, the other farmers follow suit, diving into a spree of buying and breeding cows, aiming to maximize their individual gains. However, this frenzy leads to a rampant grazing that leaves the grassland bare and barren. Ultimately, the once lush grass disappears, and the insatiable appetite of the voracious cows brings about their own starvation. In the end, all the farmers are left with no cows, their initial wealth transformed into a state even worse than before.\u003c/p\u003e\n\u003cp\u003eHe coins it as the \u0026ldquo;tragedy of the commons.\u0026rdquo; I prefer to see it as a powerful representation of what often dampens the enjoyment across the software terrain for every key player involved: the user, the developer, the \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Chief Executive Officer\"\u003eCEO\u003c/abbr\u003e, and the investor.\u003c/p\u003e\n\u003cp\u003eHow meta!\u003c/p\u003e\n\u003ch2 id=\"the-clever-one-the-frustrated-one-and-the-scared-one\"\u003eThe Clever One, The Frustrated One and The Scared One\u003c/h2\u003e\n\u003cp\u003eNow, let\u0026rsquo;s meet a familiar figure, the one we often encounter, the embodiment of many developers out there. We\u0026rsquo;ll give her a name: Sarah. Sarah\u0026rsquo;s eager to dive into a fresh technology - one that could potentially elevate her current position. So, how does she tackle this? She begins by exploring a domain, and within that, she sets her sights on a specific technology. Let\u0026rsquo;s designate this domain as something imaginary, to prevent any inadvertent offense. How about we refer to it as \u0026ldquo;Front-End Development\u0026rdquo;?\u003c/p\u003e\n\u003cp\u003eFor Front-End Sarah finds out a few different contenders in the field. She asks herself, what could the industry be thirsty for? The naive answer she arrives at, is \u0026ldquo;the most reliable one, the one that is the pleasure to develop and the one that has the most advantages\u0026rdquo;. Oh, Sarah, you impractical idealistic perfectionist, you!\u003c/p\u003e\n\u003cp\u003eNow, delving into the realm of Front-End, Sarah stumbles upon a handful of potential contenders. She ponders, what might the industry truly crave? Her initial, somewhat naive response is, \u0026ldquo;The most dependable option, the one that brings joy to the development process, and the one that boasts numerous advantages.\u0026rdquo; Oh Sarah, you, impractical, idealistic, perfectionist you!\u003c/p\u003e\n\u003cp\u003eArmed with these benchmarks, she opts for the \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://elm-lang.org/\"\u003eElm\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n language (yet another mythical being). She proceeds to dive into \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://elm-lang.org/\"\u003eElm\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, driven by her enthusiasm. However, curiosity gets the better of her, and she sneakily glances at the job listings on LinkedIn. To her astonishment, she discovers a mere trio of job opportunities for \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://elm-lang.org/\"\u003eElm\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n. This baffles her, leading her to question the accuracy of her initial language assessment.\u003c/p\u003e\n\u003cp\u003eSeeking insight, she turns to Tom, an exceptional \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n she\u0026rsquo;s acquainted with, to discuss whether \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://elm-lang.org/\"\u003eElm\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n lives up to its hype. Much to Sarah\u0026rsquo;s astonishment, Tom echoes her initial convictions regarding \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://elm-lang.org/\"\u003eElm\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n. He affirms that, indeed, \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://elm-lang.org/\"\u003eElm\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n proves to be an exceptional language, boasting enduring dependability, a well-established ecosystem, and a delightful development journey.\u003c/p\u003e\n\u003cp\u003eSarah, now even more puzzled than before, directs her confusion towards Tom, questioning whether he\u0026rsquo;s in the process of recruiting \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://elm-lang.org/\"\u003eElm\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n developers. Once again, Tom\u0026rsquo;s response is resolute: \u0026ldquo;Absolutely not! Where could I possibly locate a pool of \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://elm-lang.org/\"\u003eElm\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-savvy developers? However, we\u0026rsquo;re actively seeking out \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"JS\"\u003e\u003ca href=\"https://ecma-international.org/publications-and-standards/standards/ecma-262/\"\u003eJavaScript\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n experts!\u0026rdquo; (once more, a language name sufficiently distanced from any existing real-world instances).\u003c/p\u003e\n\u003cp\u003eAfter a brief moment of contemplation, Sarah bursts out, \u003cq cite=\"sarah\"\u003e What about me?\u003c/q\u003e\u003c/p\u003e\n\u003cp\u003eTom responds with a shake of his head, stating, \u0026ldquo;Oh, that wouldn\u0026rsquo;t work. You see, for any given application, we require a team of 20 individuals to consistently handle maintenance and bug fixes. Where on earth would we come across 20 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://elm-lang.org/\"\u003eElm\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n developers?\u0026rdquo;\u003c/p\u003e\n\u003cp\u003e\u0026ldquo;Well, shouldn\u0026rsquo;t \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://elm-lang.org/\"\u003eElm\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n apps theoretically require significantly less maintenance, given the multitude of bugs that are caught during the initial development stages?\u0026rdquo; Sarah counters silently within her mind. An idea begins to form, one she opts to keep to herself, \u0026ldquo;Ah, so maintaining a delicate codebase might indicate a higher demand for fresh \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"JS\"\u003e\u003ca href=\"https://ecma-international.org/publications-and-standards/standards/ecma-262/\"\u003eJavaScript\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n developers - implying enhanced job security!\u0026rdquo;\u003c/p\u003e\n\u003cp\u003eFeeling rather clever, she decides to validate her hunch by perusing the (imaginary) yellow pages, named Glassdoor. And lo and behold, an endless scroll unveils a plethora of distinct job listings, all centered around \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"JS\"\u003e\u003ca href=\"https://ecma-international.org/publications-and-standards/standards/ecma-262/\"\u003eJavaScript\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.\u003c/p\u003e\n\u003cp\u003eWell, Sarah learns \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"JS\"\u003e\u003ca href=\"https://ecma-international.org/publications-and-standards/standards/ecma-262/\"\u003eJavaScript\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n and all her beliefs gets validated, she becomes a very wealthy engineer, with a great job security, with each company she enters trying to keep her, year-after-yer, while other companies trying to persuade her by higher and higher offers. Or at least that was the boring version of this post that did not start with the word \u0026ldquo;tragedy\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003eInstead, she uncovers that her counterparts, much like herself, had also been quite \u003cem\u003eclever\u003c/em\u003e. A multitude of newcomers gravitated towards the language flaunting the highest job listings. Each job opening faced a surplus of around a hundred contenders. The \u0026ldquo;victor,\u0026rdquo; so to speak, emerges as the individual boasting the most qualifications and the most modest salary expectation. Or should we even label them as victors, considering that the instant they dare to dream a little bigger, a fresh job listing crops up, promptly displacing them with the next eager contender.\u003c/p\u003e\n\u003cp\u003eTom, our trusty \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, worn out from the cycle of on-boarding one low-budget, novice developer after another, vents his frustrations to the \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n. The \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n engages in discussions with the investors, who share the same dissatisfaction due to their profits being eroded by an inefficient workforce. They call upon the \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n to devise a remedy for this predicament.\u003c/p\u003e\n\u003cp\u003eThe \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n returns with a strategy to shift from \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n to \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://elm-lang.org/\"\u003eElm\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n technology. The investors, content with the proposal, take a brief pause to deliberate. A few days later, they rejoin the conversation, expressing a notable apprehension. \u0026ldquo;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://elm-lang.org/\"\u003eElm\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is practically unheard of! None of our rivals employ this language. That\u0026rsquo;s a substantial gamble we\u0026rsquo;re not prepared to take!\u0026rdquo;\u003c/p\u003e\n\u003cp\u003eArash, the \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Chief Executive Officer\"\u003eCEO\u003c/abbr\u003e, \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Chief Technology Officer\"\u003eCTO\u003c/abbr\u003e, \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Chief Financial Officer\"\u003eCFO\u003c/abbr\u003e, Product Manager, and the visionary founder of a fledgling startup, confronts the very same imaginative quandary of selecting a technology stack. Given the inherent high-stakes nature of startups, Arash adopts a prudent approach by examining the practices of more established corporations, such as those overseen by individuals like Tom in his role as \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Chief Technology Officer\"\u003eCTO\u003c/abbr\u003e, in order to identify a tried-and-true trajectory.\u003c/p\u003e\n\u003ch2 id=\"the-lose-lose-lose-situation\"\u003eThe Lose-Lose-Lose situation\u003c/h2\u003e\n\u003cp\u003eAt every juncture, every individual optimized their decisions for personal gain. At each instance, a superior option was presented, and they acknowledged the benefits it offered. Nevertheless, they settled for the inferior alternative (for the sake of avoiding any unnecessary debate, let\u0026rsquo;s refrain from mentioning that the hypothetical lesser choice was \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Sorry I have not defined this abbreviation. Can you please report this to me with my email?\"\u003eJavaScript\u003c/abbr\u003e, naturally). As a result, each person finds themselves in a less advantageous position than if they had collectively embraced the superior alternative. This impact ripples beyond individuals, extending to the entire ecosystem, hindered by the precarious edifice of abstractions left behind by the swiftly growing number of predecessors.\u003c/p\u003e\n\u003cp\u003eSo, why did they all fall short of enhancing their own lives and the lives of others? Was it the technology\u0026rsquo;s flaw? Or did the ecosystem falter? You\u0026rsquo;re astute enough to deduce the answer; after all, you had the wit to discern the languages I implicitly referred to in my hypothetical scenarios.\u003c/p\u003e\n\u003ch2 id=\"the-solution\"\u003eThe Solution\u003c/h2\u003e\n\u003cp\u003eI must admit, I\u0026rsquo;m uncertain. The nuclear arsenal continues to expand, even though the era of the Cold War has long passed. Thankfully, our world hasn\u0026rsquo;t been ravaged by nuclear conflict. Rather, it\u0026rsquo;s the interplay of mutually assured destruction and the realization by the leaders of those two nations that not embracing an alternative risk could lead to dire consequences. This, at least, has placed us in a relatively improved state.\u003c/p\u003e\n\u003cp\u003eSimultaneously, we find ourselves grappling with \u003cspan class=\"person p-name\"\u003eGarrett Hardin\u003c/span\u003e\u0026rsquo;s preoccupation \u0026ndash; the persistent challenges of overpopulation and looming environmental catastrophes. Evidently, the far-reaching peril of not embracing an alternative is of such extended duration that it transcends the immediate concerns of the very generation opting against alternatives. The burden of their choices is instead borne by their descendants: \u003cq cite=\"Current Generation\"\u003eFuck those brats.\u003c/q\u003e\u003c/p\u003e\n\u003cp\u003eIn the world of software, the tempo is notably faster, the stakes less dire compared to earlier circumstances, and the individuals engaged are often more honest than politicians and notably smarter than the average voter.\u003c/p\u003e\n\u003cp\u003eHowever, the remedy doesn\u0026rsquo;t entail adhering to an oddly precise series\nof ritualistic maneuvers. It\u0026rsquo;s a more daunting challenge. Just as\n\u003cspan class=\"person p-name\"\u003eGarrett Hardin\u003c/span\u003e titled his article, the solution remains much the same:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe population problem has no technical solution; it requires a fundamental extension of in morality.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"dear-reader\"\u003eDear Reader\u003c/h2\u003e\n\u003cp\u003eI know! The gastly claim of \u003cq cite=\"me\"\u003eto improve developer experience we first should grow an ethical sense\u003c/q\u003e, seems absurd. Yet I see no specifically little amount of gradual change, where at least some one on the whole chain did not bite the bullet and risk it.\u003c/p\u003e\n",
            "date_published": "2023-08-11T12:38:00+03:30"
        }, {
            "title": "Call Me Perma",
            "id": "https://prma.dev/posts/call-me-perma/",
            "url": "https://prma.dev/posts/call-me-perma/",
            "summary": "I find myself seated in the passenger\u0026rsquo;s seat of my mother\u0026rsquo;s car, as we make our way to an appointment with an educational psychologist. A sense of confusion and concern lingers within me, stemming from my mother\u0026rsquo;s sudden and puzzling reaction to my C-graded report card. The journey passes quietly, and we arrive at the specialist\u0026rsquo;s office without exchanging a word, leaving me still uncertain about the purpose of our visit.",
            "content_html": "\u003cp\u003eI find myself seated in the passenger\u0026rsquo;s seat of my mother\u0026rsquo;s car, as we make our way to an appointment with an educational psychologist. A sense of confusion and concern lingers within me, stemming from my mother\u0026rsquo;s sudden and puzzling reaction to my C-graded report card. The journey passes quietly, and we arrive at the specialist\u0026rsquo;s office without exchanging a word, leaving me still uncertain about the purpose of our visit.\u003c/p\u003e\n\u003cp\u003eThe psychologist initiates our session by administering a series of aptitude and intelligence tests appropriate for my age. Throughout the process, my mother\u0026rsquo;s keen gaze remains fixed on me, intensifying my nerves. Eventually, the psychologist validates my mother\u0026rsquo;s suspicions, revealing that my intellectual capabilities far exceed those of my peers. This revelation prompts my mother to shed light on the purpose of our enigmatic expedition: \u003cq cite=\"my mother\"\u003e You see, you are not stupid, you are actually very smart, you just lack self-esteem!\u003c/q\u003e Was that truly the root of the issue? While self-esteem was a factor in my unhappniess, I couldn\u0026rsquo;t help but feel that my lack of effort had deeper origins.\u003c/p\u003e\n\u003cp\u003eOh, but this wasn\u0026rsquo;t the first round of this comical saga. You see, on previous occasions, my dear mother would strategically place a glass of water right between us, like a cosmic prop. And what was the grand purpose behind this visual spectacle, you might ask? Well, it was her way of nudging me into a philosophical monologue about that very glass. In simple terms: \u003cq cite=\"my mother\"\u003eHey, kiddo, you\u0026rsquo;ve got a shortage of optimism; you\u0026rsquo;re the sort who tends to spot the half-empty glass in life.\u003c/q\u003e\u003c/p\u003e\n\u003cp\u003eAnd then we have my dear old dad, the master of responsibility training. He had this grand plan to shape my character, using internships as his secret weapon. \u003cq cite=\"my father\"\u003eOff you go, my young apprentice!\u003c/q\u003e he\u0026rsquo;d exclaim, nudging me into one vocational adventure after another. His hidden message? \u003cq cite=\"my father\"\u003eKid, I\u0026rsquo;m passing down the sacred skill of handling responsibilities!\u003c/q\u003e Ah, the age-old dance of parental strategy.\u003c/p\u003e\n\u003cp\u003eAnd there you have it, my childhood summed up, right from the time those kindergarten teachers began their chorus of complaints about my apparent \u0026ldquo;refusal\u0026rdquo; to embrace the songs that my peers had effortlessly committed to memory months before.\u003c/p\u003e\n\u003cp\u003eAs the days went by, I began to adopt a personal mantra: \u003cq cite=\"me\"\u003eI\u0026rsquo;m the poster child for laziness, the embodiment of irresponsibility, with motivation and vision nowhere to be found.\u003c/q\u003e Oddly enough, despite knowing full well the significance of education and being genuinely captivated by the realms of science and math, my actions seemed to tell a different story altogether. It\u0026rsquo;s as if I was presenting evidence that contradicted my own beliefs. Perhaps deep down, I questioned my care for my parents, struggled to find motivation, or maybe I secretly aspired to master the art of freeloadery.\u003c/p\u003e\n\u003cp\u003eThe haze of doubt began to lift when I embarked on an \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Attention-Deficit/Hyperactivity Disorder\"\u003eADHD\u003c/abbr\u003e medication journey, and lo and behold, I experienced the novel sensation of being able to sit down and read a paragraph without my mind spiraling into chaos. It was like finally playing a video game where you no longer wonder if you\u0026rsquo;re in control of that character\u0026rsquo;s movements or not. My epiphany was quite the reverse: \u0026ldquo;Oh, wait a minute, I can indeed make decisions and stick with them?\u0026rdquo;\u003c/p\u003e\n\u003cp\u003eLet me tell you, this realization was liberating, to put it mildly. Suddenly, I had the capacity to invest time in the very things that had ignited my curiosity.\u003c/p\u003e\n\u003cp\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Attention-Deficit/Hyperactivity Disorder\"\u003eADHD\u003c/abbr\u003e has had a profound impact on  my life since childhood. One revelation that became clear after seeking medication was the extent to which I had surrendered agency and intentionality.\u003c/p\u003e\n\u003cp\u003eMy existence had been defined by reactivity, with a noticeable absence of honed decision-making skills. I found myself in a state of passivity, or even worse, mere reactivity. Nonetheless, I consistently strived to reclaim it.\u003c/p\u003e\n\u003ch2 id=\"recent-victories\"\u003eRecent Victories\u003c/h2\u003e\n\u003cp\u003eOver the past few years, I\u0026rsquo;ve encountered an almost comically disproportionate share of misfortune and have found myself under substantial duress. Yet, I\u0026rsquo;ve navigated my way through these challenges.\u003c/p\u003e\n\u003cp\u003eI won\u0026rsquo;t delve into the specifics of these misfortunes, although those in my social circles can attest to their unusual frequency.\u003c/p\u003e\n\u003cp\u003eHowever, I can share that I\u0026rsquo;ve achieved several noteworthy milestones during this time span: acquiring programming skills, entering the workforce, entering marriage, and most recently, opting to unofficially change my name.\u003c/p\u003e\n\u003cp\u003eFormally, I remain \u003cspan class=\"person p-name\"\u003eAmirhossein\u003c/span\u003e, and I\u0026rsquo;m content should anyone choose to continue addressing me as such-I hold no animosity toward it. Nevertheless, it inadequately captures the depth of my identity.\u003c/p\u003e\n\u003ch2 id=\"bb76b9\"\u003e\u003cspan class=\"person p-name\"\u003eAmirhossein\u003c/span\u003e and \u003cspan class=\"person p-name\"\u003ePerma\u003c/span\u003e\u003c/h2\u003e\n\u003cp\u003eThe name Amirhossein is a composite of two Arabic names, Amir and Hossein, both of which carry two meanings. As for the firsts of these meanings, Amir translates to \u0026ldquo;prince,\u0026rdquo; while Hossein signifies \u0026ldquo;Good-junior.\u0026rdquo; The amalgamation results in the interpretation of \u0026ldquo;Junior Good Prince.\u0026rdquo;\u003c/p\u003e\n\u003cp\u003eHowever, I find myself at a loss when attempting to establish a personal connection with any aspect of this interpretation of this name. This brings us to its secondary and perhaps more intended connotation.\u003c/p\u003e\n\u003cp\u003eIn Shia Islam, there exists a concept akin to Christianity\u0026rsquo;s sainthood, known as \u0026ldquo;\u003cdfn\u003eImam\u003c/dfn\u003e\u0026rdquo;. However, these Imams are asserted to be leaders of the Islamic community. The first of these figures holds the title \u0026ldquo;\u003cspan class=\"person p-name\"\u003eAmir-al-momenin\u003c/span\u003e,\u0026rdquo; or the \u0026ldquo;prince of the faithful,\u0026rdquo; commonly abbreviated as Amir. The third Imam, the second son of the first, was named \u003cspan class=\"person p-name\"\u003eHossein\u003c/span\u003e. Both individuals deviate significantly from pacifism.\u003c/p\u003e\n\u003cp\u003eWhile these historical and linguistic connections hold merit, I must underscore a significant twist: since the age of 15, I have consciously disavowed Islam and theism in their entirety.\u003c/p\u003e\n\u003cp\u003eI find \u0026ldquo;\u003cspan class=\"person p-name\"\u003ePerma\u003c/span\u003e\u0026rdquo; to be a more fitting option, resonating more harmoniously with my ears. Moreover, it aligns with certain themes and passions that hold significance in my life. It closely aligns with the ethos underpinning this blog. I\u0026rsquo;m captivated by the philosophy of the \u003cem\u003ePermaCulture\u003c/em\u003e and \u003cem\u003ePermaComputing\u003c/em\u003e movements-albeit not necessarily their current implementations. My fascination lies in harmonizing with the world rather than coercing it to conform to my presence. Moreover, the notion of leaving a lasting imprint on the world holds a special allure for me. However, this yearning leans more toward the aesthetic realm rather than being rooted in \u003cem\u003eutilitarian\u003c/em\u003e aspirations.\u003c/p\u003e\n\u003ch2 id=\"dear-reader\"\u003eDear Reader\u003c/h2\u003e\n\u003cp\u003eIf you\u0026rsquo;ve known me previously, you might have observed my recent shifts in usernames, emails, and name. Across the internet, I\u0026rsquo;ve opted for \u003ccode\u003ePrma\u003c/code\u003e instead of the more direct \u003ccode\u003ePerma\u003c/code\u003e, as the latter is frequently claimed or could serve other entities more fittingly.\u003c/p\u003e\n\u003cp\u003eHowever, this change isn\u0026rsquo;t indicative of a complete unveiling of my authentic self. Thus, referring to me by my previous name isn\u0026rsquo;t as insensitive as the act of deadnaming. Rather, this transition signifies the inception of a renewed chapter, one marked by heightened purpose and intention.\u003c/p\u003e\n\u003cp\u003eWhile I do prefer and hope for the usage of \u0026ldquo;\u003cspan class=\"person p-name\"\u003ePerma\u003c/span\u003e\u0026rdquo; moving forward, I\u0026rsquo;m entirely at ease if you choose otherwise. Your decision in this regard is genuinely respected.\u003c/p\u003e\n",
            "date_published": "2023-08-09T12:31:00+03:30"
        }, {
            "title": "Dishonesty of Optimizing for Developer Time",
            "id": "https://prma.dev/posts/dishonesty_of_optimizing_for_developers_time/",
            "url": "https://prma.dev/posts/dishonesty_of_optimizing_for_developers_time/",
            "summary": "Intro Based on some individuals\u0026rsquo; viewpoints, they emphasize optimizing for developer time or productivity as their main priority, rather than giving top precedence to aspects such as performance, robustness, or correctness.\nThe Thesis Their argument revolves around the idea that developers\u0026rsquo; time is more valuable and expensive than server resources. They often use phrases like \u0026ldquo;You can always refactor,\u0026rdquo; \u0026ldquo;You can always optimize for performance,\u0026rdquo; or \u0026ldquo;We will fix bugs later on\u0026rdquo; to support their viewpoint.",
            "content_html": "\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eBased on some individuals\u0026rsquo; viewpoints, they emphasize optimizing for developer time or productivity as their main priority, rather than giving top precedence to aspects such as performance, robustness, or correctness.\u003c/p\u003e\n\u003ch2 id=\"the-thesis\"\u003eThe Thesis\u003c/h2\u003e\n\u003cp\u003eTheir argument revolves around the idea that developers\u0026rsquo; time is more valuable and expensive than server resources. They often use phrases like \u0026ldquo;You can always refactor,\u0026rdquo; \u0026ldquo;You can always optimize for performance,\u0026rdquo; or \u0026ldquo;We will fix bugs later on\u0026rdquo; to support their viewpoint. While this perspective may be considered ingenious, it is contingent on proper planning, weighing the trade-offs, and actually acting upon those decisions.\u003c/p\u003e\n\u003ch2 id=\"my-antithesis\"\u003eMy Antithesis\u003c/h2\u003e\n\u003cp\u003eHowever, if this were genuinely the case, more substantial effort would have been invested in refactoring or choosing a more rigorous language than \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"JS\"\u003e\u003ca href=\"https://ecma-international.org/publications-and-standards/standards/ecma-262/\"\u003eJavaScript\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, for example, a language that can significantly boost performance in the long run.\u003c/p\u003e\n\u003cp\u003eFixing bugs in backends written in \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"JS\"\u003e\u003ca href=\"https://ecma-international.org/publications-and-standards/standards/ecma-262/\"\u003eJavaScript\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"PHP: Hypertext Preprocessor\"\u003e\u003ca href=\"https://www.php.net/\"\u003ePHP\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, or \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.python.org/\"\u003ePython\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is certainly feasible, but adding performance improvements can become challenging, if not improbable. More meticulous programming tools automate the process of finding and fixing even the most elusive bugs and come with significant performance optimizations. The ability to make well-founded assumptions about the program allows for better optimization.\u003c/p\u003e\n\u003cp\u003eThis approach often leads to a situation where future engineers, tasked with rewriting the \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Minimum Viable Product\"\u003eMVP\u003c/abbr\u003e program in a more scalable language, face an archeological rediscovery process.\u003c/p\u003e\n\u003cp\u003eSo, if they are not genuinely optimizing for shorter development time, what are they doing?\u003c/p\u003e\n\u003ch2 id=\"lifting-the-veil-the-actual-thesis\"\u003eLifting The Veil: The Actual Thesis\u003c/h2\u003e\n\u003cp\u003eIt appears that they prioritize short-term gains over achieving greater long-term goals.\u003c/p\u003e\n\u003cp\u003eA language like \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, while providing benefits like enhanced safety and reliability, requires significantly more time to produce a binary or \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Application Programming Interface\"\u003eAPI\u003c/abbr\u003es. The manual labor of finding bugs is taken over by the compiler and the language\u0026rsquo;s semantics. If the focus is on developer productivity, then this automation is naturally desirable. However, what one truly desires to convey is \u0026ldquo;I have this feature, even though it may have some bugs and performance issues, I have it nonetheless.\u0026rdquo;\u003c/p\u003e\n\u003ch2 id=\"the-synthesis\"\u003eThe Synthesis\u003c/h2\u003e\n\u003cp\u003eThat may be a positively good idea for trying the market to see if there is any for that specific idea, for most software developements though, the actual intention is not experimentation, as the novelty of product and bussiness plan do not warrant a need for experimentaion. rather, having something to sell, as fast as possible. That\u0026rsquo;s for start ups. Where there is both legitimate and illegitimate short-termism. But more established enterprises may have this pairing as well. While there are A/B experimentaions going on, trying different approaches to see which works, middle management might also like the addition of another achievement in their yearly reports.\u003c/p\u003e\n\u003cp\u003eA rapid way to discern whether it falls under the category of experimentation/prototyping or an \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Minimum Viable Product\"\u003eMVP\u003c/abbr\u003e/achievement-oriented project is to examine whether there is a notably extended period allocated for the program\u0026rsquo;s rewrite compared to its initial development phase.\u003c/p\u003e\n\u003ch2 id=\"dear-reader\"\u003eDear Reader\u003c/h2\u003e\n\u003cp\u003eSimilar to many phenomena, short-termism can indeed have legitimate applications. The reluctance of many to embrace this term is rooted in its improper and illegitimate uses.\u003c/p\u003e\n\u003cp\u003eCertainly, there are well-intentioned individuals who advocate for developer productivity. However, those with ample experience will acknowledge that long-term developer productivity is not synonymous with low-overhead development, and, more often than not, these two objectives are incompatible.\u003c/p\u003e\n",
            "date_published": "2023-07-31T12:24:00+03:30"
        }, {
            "title": "Criteria For Choosing Tools",
            "id": "https://prma.dev/posts/criteria-for-choosing-tools/",
            "url": "https://prma.dev/posts/criteria-for-choosing-tools/",
            "summary": "Intro The web is utterly fucked. But anyone with some resources resources at hand and curiosity at heart and intentional tool selection can have a decent experience.\nThe Reasons The web\u0026rsquo;s lamentable state can be attributed to several factors. Allow me to enumerate them concisely for clarity:\nBloated beyond reason. Plagued with incessant ads. Prioritizing feature over bug fixes, if addressed at all. Designed to cater to journalists and advertisers, neglecting your needs.",
            "content_html": "\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eThe web is utterly fucked. But anyone with some resources resources at hand and curiosity at heart and intentional tool selection can have a decent experience.\u003c/p\u003e\n\u003ch2 id=\"the-reasons\"\u003eThe Reasons\u003c/h2\u003e\n\u003cp\u003eThe web\u0026rsquo;s lamentable state can be attributed to several factors. Allow me to enumerate them concisely for clarity:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBloated beyond reason.\u003c/li\u003e\n\u003cli\u003ePlagued with incessant ads.\u003c/li\u003e\n\u003cli\u003ePrioritizing feature over bug fixes, if addressed at all.\u003c/li\u003e\n\u003cli\u003eDesigned to cater to journalists and advertisers, neglecting your needs.\u003c/li\u003e\n\u003cli\u003eImposing confinement and isolation upon you.\u003c/li\u003e\n\u003cli\u003eFailing to empower users like yourself.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"a-brief-digression\"\u003eA Brief Digression\u003c/h3\u003e\n\u003cp\u003eThe final point warrants further elaboration.\u003c/p\u003e\n\u003cp\u003eThe internet is, in fact, a tool. It is \u003cem\u003esomething\u003c/em\u003e that is made to help \u003cem\u003esomeone\u003c/em\u003e achieve \u003cem\u003esome goal\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eThe captivating world of \u003cem\u003eWeb 2.0\u003c/em\u003e and \u003cem\u003eSocial Media\u003c/em\u003e (the somethings) - initially promising to empower people (the someones), granting them enriched social connections (the some goal). A promising start, indeed, leaving many with pleasant experiences during the inception of Web 2.0.\u003c/p\u003e\n\u003cp\u003eBut, alas, as time went by, the very incentives that drove these Social Media companies veered them off their intended course. They embarked on a divergent path, straying from their professed mission, and now, Web 2.0 primarily serves as a platform to amplify the voices of journalists and celebrities (the actual someones), propelling them towards greater fame and recognition (the actual some goals).\u003c/p\u003e\n\u003cp\u003eThe driving force behind these shifts? The ever-persistent quest for revenue from advertisers, pushing them to create content that captures maximum engagement. The more captivating, the more lucrative.\u003c/p\u003e\n\u003cp\u003eRegrettably, the landscape has birthed what I would call the \u0026ldquo;four horsemen of reactionary engagement\u0026rdquo;: the doomsday, super political reporter; the enraging, populist racist politician; the trolling, impulsive \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Chief Executive Officer\"\u003eCEO\u003c/abbr\u003e; and the drama-driven, vacuous celebrity.\u003c/p\u003e\n\u003cp\u003eIn a nutshell, it appears you\u0026rsquo;ve been played for a fool. Social media\u0026rsquo;s purported aim of empowering you is nothing but a delusion.\u003c/p\u003e\n\u003ch2 id=\"go-empower-yourself\"\u003eGo Empower yourself\u003c/h2\u003e\n\u003cp\u003eBefore you proceed, there\u0026rsquo;s a prerequisite to address: overcoming the fear of missing out. Now, how one achieves this is not within my scope to divulge, but I can assist you in understanding why these fears are unfounded.\u003c/p\u003e\n\u003cp\u003eConsider this: Have you truly missed out on anything of genuine importance? Reflect on whether the latest controversial statement from Donald Trump has genuinely altered the course of your life. And if it did, was Twitter (or whatever they dub it these days) truly the sole or optimal medium for receiving such information?\u003c/p\u003e\n\u003cp\u003eEven in Iran, where official channels are notorious for propagating falsehoods, Twitter appears to be excessive. For me, friends and private messages reliably convey essential information. And indeed, individuals might spend considerable time on Twitter, but isn\u0026rsquo;t the fundamental pledge of social media the relay of information? If that need is already being fulfilled through other means, what purpose does Twitter truly serve?\u003c/p\u003e\n\u003cp\u003eIf you find yourself fortunate enough to reside in a country with trustworthy official channels, and your well-being hinges on crucial information like hurricane alerts, rest assured that dedicated services cater specifically to such needs. Similarly, if you derive pleasure from reading news articles, I suggest identifying the authors whose work you value and following them directly. However, if these activities do not align with your interests, then quite frankly, you have no real necessity for engaging with this \u0026ldquo;stuff.\u0026rdquo;\u003c/p\u003e\n\u003cp\u003eOh, my friend, let me share with you a sobering truth about these companies - they\u0026rsquo;re akin to emotionally abusive partners, manipulating you into believing you\u0026rsquo;re nothing without them. They demean you, calling you stupid and incapable of managing your life without their presence. They cunningly weave a narrative of how your life is all thanks to them, that your friendships exist solely because of their benevolence.\u003c/p\u003e\n\u003cp\u003eBut don\u0026rsquo;t be fooled by their deceiving ways. They mangle your interactions, force-feeding you ads and utter nonsense, all while claiming it\u0026rsquo;s an act of love. And when their misdeeds come to light, they stage a grand spectacle of apologies and vows to change, only to strike back even harder later on.\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s time to break free from this toxic cycle. I know it\u0026rsquo;s daunting, and fear may grip your heart initially, but liberate yourself from their clutches. You will discover a life far better than you ever imagined. You deserve more than this relentless manipulation. Embrace the freedom that awaits, my dear friend.\u003c/p\u003e\n\u003ch2 id=\"how-to-find-a-good-tool\"\u003eHow to find a good tool\u003c/h2\u003e\n\u003ch3 id=\"step-one-find-the-low-hanging-fruits\"\u003eStep One: Find The Low Hanging Fruits\u003c/h3\u003e\n\u003cp\u003eYou stand at the precipice of transformation, ready to change your life for the better. The first step is to identify the areas in your life that require attention. What needs are you seeking to fulfill? And upon which inadequate services are you currently relying?\u003c/p\u003e\n\u003cp\u003eIn my case, I sought:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eA steady flow of lightweight information.\u003c/li\u003e\n\u003cli\u003eDaily interactions with fellow enthusiasts akin to myself.\u003c/li\u003e\n\u003cli\u003eA means to uncover specific data.\u003c/li\u003e\n\u003cli\u003eA reliable way to send emails.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eFor too long, I depended on subpar sources to meet these needs. For the first two, I found myself reliant on Twitter, Instagram, Reddit, and Google News. As for the third and fourth requirements, I resorted to Google\u0026rsquo;s services. However, all of these platforms consistently fell short and inflicted undue stress upon me.\u003c/p\u003e\n\u003ch3 id=\"step-two-find-effective-replacements\"\u003eStep Two: Find Effective Replacements\u003c/h3\u003e\n\u003cp\u003eIn my earlier post I have mentioned that I already have replaced most of these services with better ones. But I have not mentioned what constitutes an effective solution.\u003c/p\u003e\n\u003cp\u003eIn \u003ca href=\"../web-experience-makeover\"\u003emy previous post\u003c/a\u003e, I alluded to having replaced many of these services with superior alternatives. However, I haven\u0026rsquo;t delved into what exactly makes a solution effective.\u003c/p\u003e\n\u003cp\u003eAllow me to outline the criteria and guiding principles for an empowering tool:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eIt should not cause you any harm.\u003c/li\u003e\n\u003cli\u003eIt should not lock you in.\u003c/li\u003e\n\u003cli\u003eIt should not feel frugal.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eNow, let me delve into the rationale behind these criteria:\u003c/p\u003e\n\u003ch4 id=\"1-dot-it-should-not-cause-you-more-harm-than-good\"\u003e1. It should not cause you more harm than good\u003c/h4\u003e\n\u003cp\u003eIf a tool causes more harm than good, why persist in using it at all?\u003c/p\u003e\n\u003cp\u003eTo safeguard your interests, ensure that the tool operates with transparency. Platforms that intentionally harm users are less inclined to be forthcoming about their inner workings. Opt for open-source and audited software, provided you trust the incentives and capabilities of the auditors, as this fosters transparency.\u003c/p\u003e\n\u003cp\u003eMoreover, it is crucial to align the incentives of the tool\u0026rsquo;s creators with your own. While there will always be some degree of misalignment, not all cases are equal. Selling or renting software may incentivize developers to plan for obsolescence, sell incomplete products, or enforce lock-ins. Yet, these misalignments are overshadowed by the egregious discrepancies inherent in ad-driven models.\u003c/p\u003e\n\u003ch4 id=\"2-dot-it-should-not-lock-you-in\"\u003e2. It should not lock you in\u003c/h4\u003e\n\u003cp\u003eIndeed, the peril of being locked into a tool becomes evident when the company\u0026rsquo;s incentives undergo a shift. I experienced this firsthand in 2015 when I was a loyal Evernote user with a premium subscription, trusting it with all my valuable information. However, when Evernote decided to drop right-to-left language support crucial for the Middle Eastern languages, my pleas for assistance fell on deaf ears. They deemed the region unworthy of attention, leaving me stranded and unable to utilize my data effectively.\u003c/p\u003e\n\u003cp\u003eThe true pain emerged when I attempted to export my information and realized I was trapped in their ecosystem. They held my notes hostage, providing them back only in a non-standard format through XML or JSON files. This, my friends, was the dreaded lock-in, and I had to endure a labyrinthine journey of manual extraction to break free.\u003c/p\u003e\n\u003cp\u003eTo avoid such a predicament, one essential question should be posed:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWill it be more difficult for me to switch to a competitor once I\u0026rsquo;ve fully adopted this service compared to my current situation before using it?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIf the service retains your data and only offers it back in a non-standard format, it becomes significantly more challenging to transition to a competitor after investing your notes into the first service. Be vigilant and consider the implications before getting entangled in such situations.\u003c/p\u003e\n\u003ch4 id=\"3-dot-it-should-not-feel-frugal-dot\"\u003e3. It should not feel frugal.\u003c/h4\u003e\n\u003cp\u003eLet us keep in mind the essence of this endeavor: to enhance the quality of our lives. Undoubtedly, there are noble causes that may necessitate adopting a certain level of frugality, as was the case for me with animal rights, which amusingly led me to embrace veganism.\u003c/p\u003e\n\u003cp\u003eHowever, advocating for these causes demands energy, and it might inadvertently lead to isolation. We must acknowledge that not everything can or should be a constant battle. The purpose of utilizing these tools is to improve our lives, not to make them more arduous.\u003c/p\u003e\n\u003cp\u003eIf safeguarding your privacy to the utmost extreme is your goal, then by all means, employ complex passwords for each site and commit them to memory. Nevertheless, we must be mindful that our fighting energy is finite. Thus, it becomes essential to prioritize and channel our limited energy toward the most urgent and meaningful issues that truly resonate with our hearts.\u003c/p\u003e\n\u003ch2 id=\"dear-reader\"\u003eDear Reader\u003c/h2\u003e\n\u003cp\u003eYou are on the right path, and I believe in you wholeheartedly! Trust me, I\u0026rsquo;ve been through this journey myself, and it turned out to be a delightful and straightforward experience. Take heart, for you can certainly achieve it too! Keep going, and you\u0026rsquo;ll soon realize how much better and easier life becomes. You\u0026rsquo;ve got this!\u003c/p\u003e\n",
            "date_published": "2023-07-29T12:14:00+03:30"
        }, {
            "title": "Giving My Exprience of Web a Makeover",
            "id": "https://prma.dev/posts/web-experience-makeover/",
            "url": "https://prma.dev/posts/web-experience-makeover/",
            "summary": "Intro Back in the good old days, I found myself drawn to the wonders of the internet, captivated by its virtual world, teeming with individuals who resonated with me, people I admired, or at least aspired to emulate. The communication channels of that era felt more personal, more akin to a lively conversation passed on through word of mouth.\nMore of Those Days In those youthful days, I\u0026rsquo;d eagerly scour the web for words that piqued the interests of my teenage self, and with a simple search, Google would present me with a treasure trove of blogs authored by kindred spirits.",
            "content_html": "\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eBack in the good old days, I found myself drawn to the wonders of the internet, captivated by its virtual world, teeming with individuals who resonated with me, people I admired, or at least aspired to emulate. The communication channels of that era felt more personal, more akin to a lively conversation passed on through word of mouth.\u003c/p\u003e\n\u003ch2 id=\"more-of-those-days\"\u003eMore of Those Days\u003c/h2\u003e\n\u003cp\u003eIn those youthful days, I\u0026rsquo;d eagerly scour the web for words that piqued the interests of my teenage self, and with a simple search, Google would present me with a treasure trove of blogs authored by kindred spirits. I\u0026rsquo;d venture into the realms of Twitter, FriendFeed, Facebook, Orkut, and the myriad other social platforms, spending precious moments escaping the painful realities of feeling marginalized by my parents, teachers, and peers at school.\u003c/p\u003e\n\u003cp\u003eThe internet of that era held a special place in my heart; it offered solace and kinship. Even though I may not have been as popular as some within those social circles, I cherished engaging in conversations within a vibrant crowd of amazing individuals, the very ones I admired deeply.\u003c/p\u003e\n\u003cp\u003eAs time marched on, many of the cherished online spaces I once loved fell by the wayside, while others morphed into monstrous entities, becoming tools of ostracization. Although I personally may not have been the target of such mistreatment, I could discern the toxic environment that fostered and emboldened bullies.\u003c/p\u003e\n\u003cp\u003eEven the search engines, once a source of discovery and connection, began to falter. Each passing day brought forth an ever-increasing deluge of hyper-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Search Engine Optimization\"\u003eSEO\u003c/abbr\u003e-optimized, meaningless content and tech-centric sites merely driven by profit, overtaking the slots that were once reserved for passionate individuals with independent blogs.\u003c/p\u003e\n\u003cp\u003eAs the landscape transformed, I gradually came to terms with the nostalgic allure of those bygone days, realizing that it had become a remnant of the lost innocence of the early internet or clouded by my own flawed perception of what truly transpired.\u003c/p\u003e\n\u003cp\u003eThe sense of desperation that had gripped me started to crumble when \u003cspan class=\"person p-name\"\u003eElon Musk\u003c/span\u003e\u0026rsquo;s actions on Twitter triggered a disillusionment, pushing me to reconsider Fosstodon-an open-source social platform. And oh, what a fortuitous decision that turned out to be. It was as if I had stumbled upon the early days of FriendFeed, where genuine exchange of information thrived, embodying the very essence of the social web I yearned for.\u003c/p\u003e\n\u003cp\u003eBut a part of me questioned this fortunate discovery. Could it merely be a chance occurrence, a fluke in the otherwise distorted realm of human-generated nonsense? I grappled with doubts.\u003c/p\u003e\n\u003cp\u003eThen, as if destiny had a hand in it, the second revelation struck-a website called Kagi, delivering yet another blow to the illusion I had held onto. The cracks in my previous beliefs widened, challenging me to confront the harsh realities of the digital landscape.\u003c/p\u003e\n\u003cp\u003eKagi, an unconventional paid search engine, piqued my curiosity, prompting me to give it a try. What unfolded before my eyes left me astounded-a screen brimming with blog posts dedicated to the concept of \u003cem\u003ePermaComputing\u003c/em\u003e occupied the very first page of results. In that moment, it dawned on me that the beloved world of independent blogging, which I had presumed to be on life support, had not faded away as I had believed. Instead, it thrived, resilient and as potent as ever. It was the so-called social media platforms and search engines, the very entities I had placed my trust in, that had ultimately let me down, betraying the internet I held dear.\u003c/p\u003e\n\u003cp\u003eThe illusion that once clouded my perception had dissipated into thin air.\u003c/p\u003e\n\u003cp\u003eDetermined to instigate a change, I took my first footsteps in the path full of transformations. I am currently in the midst of that process, but I have successfully identified the type of experience I desire. I have pinpointed a few readily available opportunities and have taken proactive measures to secure them for myself.\u003c/p\u003e\n\u003cp\u003eForemost, I yearn for an authentic perspective of the internet-a genuine representation of the collective human experience rather than a mere showcase of the glossiest and most superficial elements. To fulfill this aspiration, I sought out a suitable search engine, and as I mentioned earlier, I found my answer in Kagi-it aligns perfectly with my vision.\u003c/p\u003e\n\u003cp\u003eFurthermore, I crave a steady stream of thoughtful and sincere content. To achieve this, I turned to an \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Realy Simple Syndication\"\u003eRSS\u003c/abbr\u003e aggregator to curate and deliver such material to me consistently. Feedbin emerged as the ideal choice, serving as the conduit for fulfilling my appetite for meaningful discourse.\u003c/p\u003e\n\u003cp\u003eI discovered another low-hanging fruit on my path towards a more fulfilling online experience-a social website optimized for community rather than being driven solely by journalists. This gem came in the form of Mastodon.\u003c/p\u003e\n\u003cp\u003eIn my quest for a trustworthy email service that respects my privacy and shields me from the relentless influx of spammers, I received a recommendation for ProtonMail. Taking heed of the suggestion, I made the switch and, so far, I find it to be a satisfactory choice.\u003c/p\u003e\n\u003cp\u003eYou may have noticed that out of the four aforementioned solutions, three are paid services. Additionally, two of them are closed-sourced, while one-the email service-poses the risk of vendor lock-in. Although this may not be the ideal scenario, I weighed my options against a set of criteria that I had established. In the end, these choices emerged as the better alternatives, despite their limitations.\u003c/p\u003e\n\u003cp\u003eHowever, I realize that this post has already grown quite lengthy, and the criteria I employed deserve a \u003ca href=\"../criteria-for-choosing-tools\"\u003emore thorough elaboration\u003c/a\u003e. Therefore, I will save their exploration for a future post, where I can delve deeper into these ideas deserving of greater attention.\u003c/p\u003e\n\u003ch2 id=\"dear-reader\"\u003eDear Reader\u003c/h2\u003e\n\u003cp\u003eAt present, I find immense joy in my renewed online experience-a sense of tranquility and refuge washes over me whenever I delve into the internet. I wholeheartedly urge you, dear reader, who may be experiencing similar frustrations to those of my past self, to take a moment and reevaluate your internet usage. There is a strong possibility that the internet can be a much more pleasant and gratifying space than what you might be feeling at this moment. I know this to be true because I am living it right now. Embrace the journey of exploring better alternatives and reclaim the joy in your online interactions.\u003c/p\u003e\n",
            "date_published": "2023-07-19T12:04:00+03:30"
        }, {
            "title": "HTML, The Programming Language",
            "id": "https://prma.dev/posts/html_the_programming_language/",
            "url": "https://prma.dev/posts/html_the_programming_language/",
            "summary": "Intro Ah yes, the eternal dispute over whether HTML counts as a proper programming language seems to bring out the best and worst of our community\u0026rsquo;s collective rational faculties. A veritable feast of half-baked attempts to define away the problem by appealing to whatever convenient characteristics the speaker happens upon, combined with a sprinkling of more serious thinkers seeking some grand philosophical theory to explain it all. But don\u0026rsquo;t get your hopes up - you won\u0026rsquo;t find any silver bullet solutions here folks.",
            "content_html": "\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eAh yes, the eternal dispute over whether  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"Hyper-Text Markup Language\"\u003e\u003ca href=\"https://html.spec.whatwg.org/\"\u003eHTML\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n counts as a proper programming language seems to bring out the best and worst of our community\u0026rsquo;s collective rational faculties. A veritable feast of half-baked attempts to define away the problem by appealing to whatever convenient characteristics the speaker happens upon, combined with a sprinkling of more serious thinkers seeking some grand philosophical theory to explain it all. But don\u0026rsquo;t get your hopes up - you won\u0026rsquo;t find any silver bullet solutions here folks. Just a parade of armchair theoreticians grasping blindly for some sense of clarity amidst the fog of poorly thought out positions. So gather \u0026lsquo;round, listen up, and prepare yourself for another round of pointless squabbling. The fun is just beginning!\u003c/p\u003e\n\u003ch2 id=\"the-loops-and-the-features\"\u003eThe Loops And The Features\u003c/h2\u003e\n\u003cp\u003eIndividuals frequently endeavor to delineate programming languages by differentiating them from \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"Hyper-Text Markup Language\"\u003e\u003ca href=\"https://html.spec.whatwg.org/\"\u003eHTML\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, contending that a programming language possesses specified traits. Traits that might encompass looping structures, conditional statements, or even compilations. Alas, these efforts are founded upon retrospective comprehension - reliant on past personal observations of what constitutes a programming language. This flawed methodology, inherently, undermines the legitimacy of their claims inasmuch as they concurrently explore discrepancies between what is deemed not to be a programming language. A circular argument ensues, lacking genuineness, and thus futile in supporting the allegation that \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"Hyper-Text Markup Language\"\u003e\u003ca href=\"https://html.spec.whatwg.org/\"\u003eHTML\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n lacks programming language attributes.\u003c/p\u003e\n\u003cp\u003eAlright, listen up! Let\u0026rsquo;s say I\u0026rsquo;m dead set on accusing Tom of being a thieving scoundrel while vehemently asserting that Amanda is as innocent as can be. To make my case, I start off by drawing a sharp contrast between Tom and Amanda. Then, after much contemplation, I concoct a ridiculously specific definition of a thief: \u0026ldquo;Anyone who happens to be a man in his sixties with an academic background in History.\u0026rdquo; Can you believe that? Now, picture this - imagine we go ahead and convict every poor soul who fits this outrageous description. Well, I\u0026rsquo;ll tell you right now, that\u0026rsquo;s a load of nonsense! It simply won\u0026rsquo;t fly, and anyone with half a brain can see how utterly flawed and impractical that notion is.\u003c/p\u003e\n\u003ch2 id=\"the-turing-completeness\"\u003eThe Turing Completeness\u003c/h2\u003e\n\u003cp\u003eNow, let me tell you about those folks who prefer a more unified approach when it comes to defining something, like a programming language. They often rely on axioms, you know, those fundamental principles that serve as the bedrock of reasoning. One of the most famous examples is the notion of \u003cem\u003eTuring completeness\u003c/em\u003e being the ultimate defining factor. At first glance, it may not seem problematic. But here\u0026rsquo;s the burning question: Why on earth would we go down that route?\u003c/p\u003e\n\u003cp\u003eThink about it. We create distinctions in definitions to aid us in effectively communicating a concept amongst ourselves. As far as I know, most programmers couldn\u0026rsquo;t care less about whether a programming language can perform every single computation imaginable in theory. No, sir! Instead, they value the practical aspects like ease of use and reliability when it comes to solving a specific set of problems. So, how in the world would that earlier theoretical claim serve us in our day-to-day tasks? It\u0026rsquo;s a real head-scratcher, especially when you consider that such a filter would let languages like brainfuck and whitespace pass through, while disregarding \u003cem\u003etotal\u003c/em\u003e programming languages that could actually lead to more robust and dependable software.\u003c/p\u003e\n\u003cp\u003eBut here\u0026rsquo;s the kicker - some people actually advocate for this madness. They\u0026rsquo;ve come up with a seemingly cohesive definition of a programming language, but their motivations for choosing that definition are nothing more than an afterthought. As a result, their definitions are utterly useless, or at the very least, useless to those who couldn\u0026rsquo;t care less about denigrating a language. Can you believe it? What a ridiculous state of affairs!\u003c/p\u003e\n\u003ch2 id=\"dear-reader\"\u003eDear Reader\u003c/h2\u003e\n\u003cp\u003eNow, let me be clear, my intention here is not to rally behind \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"Hyper-Text Markup Language\"\u003e\u003ca href=\"https://html.spec.whatwg.org/\"\u003eHTML\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n and extol its virtues. Instead, I aim to shed light on our incessant desire to bestow added significance upon the definition of our work. And, quite frankly, I implore you to put an end to it. You see, a programming language can possess capabilities or be lacking in them, and a programmer may be focused on orchestrating the flow of information or on its presentation. We come in all shapes and forms, each with our unique approaches. Attempting to establish some sort of gatekeeping mechanism in this endeavor will only result in programmers overlooking the fact that they may just require \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"Hyper-Text Markup Language\"\u003e\u003ca href=\"https://html.spec.whatwg.org/\"\u003eHTML\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n and \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"Casscading Style Sheet\"\u003e\u003ca href=\"https://www.w3.org/TR/CSS/#css\"\u003eCSS\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n to fulfill their job requirements. This, in turn, contributes to the sorry state of the web-bloated and disheartening.\u003c/p\u003e\n\u003cp\u003eLet us cherish our roles as creators and refrain from placing undue emphasis on the definition of our jobs, but rather, let us focus on the outcomes we produce. After all, we are all creators and problem-solvers at heart.\u003c/p\u003e\n",
            "date_published": "2023-06-24T11:50:00+03:30"
        }, {
            "title": "Consider Developer's Snack",
            "id": "https://prma.dev/posts/consider_developers_snack/",
            "url": "https://prma.dev/posts/consider_developers_snack/",
            "summary": "Intro During my early 20s, I found myself immersed in the world of sustainable architecture as an architecture student. Engaging in various workshops centered around this field, one particular experience stands out as a monumental turning point in my life. It was a workshop conducted by a renowned professor in Iran, where I gained valuable insights. Within this workshop, we collectively brainstormed strategies to harness heat sources for a four-member family\u0026rsquo;s house, aiming to optimize its thermal efficiency.",
            "content_html": "\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eDuring my early 20s, I found myself immersed in the world of sustainable architecture as an architecture student. Engaging in various workshops centered around this field, one particular experience stands out as a monumental turning point in my life. It was a workshop conducted by a renowned professor in Iran, where I gained valuable insights.\nWithin this workshop, we collectively brainstormed strategies to harness heat sources for a four-member family\u0026rsquo;s house, aiming to optimize its thermal efficiency. We considered a range of possibilities, including solar and geothermal heat, as well as the heat generated by the kitchen oven. However, there was one significant heat source that eluded our attention, as pointed out persistently by the professor.\u003c/p\u003e\n\u003cp\u003eEventually, he provided us with a clue: \u0026ldquo;You seem to have overlooked four 37-degree Celsius heaters.\u0026rdquo; It dawned on us that we had forgotten to factor in the heat generated by the family members themselves. Their body heat, a natural source of warmth, had slipped our minds entirely.\u003c/p\u003e\n\u003cp\u003eReflecting on a more recent occurrence, a certain paper began circulating, comparing the energy usage footprint of different programming languages. Yet, I couldn\u0026rsquo;t help but notice that the discussions surrounding this paper overlooked a crucial aspect-it solely measured the energy footprint at one specific point in the application\u0026rsquo;s lifecycle.\u003c/p\u003e\n\u003cp\u003eIt is essential to recognize that the energy usage of a programming language extends beyond a mere snapshot analysis. To truly grasp the overall impact, we must consider the entire lifecycle of the application, accounting for factors such as development, deployment, maintenance, and eventual retirement. Only then can we gain a comprehensive understanding of the energy implications associated with different programming languages.\u003c/p\u003e\n\u003ch2 id=\"the-paper-as-the-thread-we-pull\"\u003eThe Paper, As The Thread We Pull\u003c/h2\u003e\n\u003cp\u003eThe paper, titled \u0026ldquo;Energy Efficiency Across Programming Languages,\u0026rdquo; delves into the exploration of various problems and their corresponding solutions, which are implemented across multiple programming languages. The researchers conducted an analysis of the electricity consumption associated with each implementation. In essence, the primary focus of the study revolves around determining the relative energy efficiency of different programming languages, with \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.iso.org/standard/74528.html\"\u003eC\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n emerging as the most efficient and serving as the benchmark for measurement.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eC      | 01.00 | â–“\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eRust   | 01.03 | â–“\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eJava   | 01.98 | â–“â–“\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ePython | 75.88 | â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ePerl   | 79.58 | â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThese results carry considerable weight, although it is essential to address a common misconception surrounding their implications. Contrary to popular belief, these findings do not unequivocally assert that a \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.iso.org/standard/74528.html\"\u003eC\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n program is inherently more environmentally sustainable than its \u003cdfn\u003eJava\u003c/dfn\u003e counterpart.\u003c/p\u003e\n\u003ch2 id=\"consider-the-snack\"\u003eConsider The Snack\u003c/h2\u003e\n\u003cp\u003eIn the field of sustainability literature, there exists a concept known as \u003cdfn\u003eLife-Cycle Assessment\u003c/dfn\u003e. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Life-Cycle Assessment\"\u003eLCA\u003c/abbr\u003e involves evaluating the environmental impact of a product throughout its entire life cycle, encompassing aspects such as raw material extraction, manufacturing, and disposal or recycling.\u003c/p\u003e\n\u003cp\u003eWhen applying this concept to the assessment of software life cycles, we realize that there are several significant factors that have been overlooked. Allow me to provide some insights on these important considerations.\u003c/p\u003e\n\u003cp\u003eFirstly, the authors of the paper have primarily focused on the runtime of a specific set of problems. This means that their applications follow a sequence of starting up, solving the given problem, and then exiting. Consequently, the results obtained are biased towards programming languages that excel at efficient startup and shutdown processes. However, this perspective fails to account for the behavior of servers and long-running processes. Servers, for instance, typically start up once per day or even less frequently and spend extended periods in the computational phase. If a programming language is efficient during the initial startup but requires frequent restarts during runtime, this crucial aspect is overlooked.\u003c/p\u003e\n\u003cp\u003eBut we shouldn\u0026rsquo;t stop there. Another aspect to consider is compilation. While \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is indeed an impressive language, its compilation process is significantly more resource-intensive compared to \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n yields highly efficient binaries, but the energy expended during the compilation process is also considerably higher.\u003c/p\u003e\n\u003cp\u003eFurthermore, the improved quality of \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u0026rsquo;s compiled binaries becomes relevant when we consider the potential presence of bugs and the subsequent need for recompilation. More permissive compilers may result in programs with a higher likelihood of bugs, necessitating additional rounds of debugging, fixing, and retesting. It\u0026rsquo;s important to acknowledge that this discussion goes beyond the developer\u0026rsquo;s running computer and includes factors such as sustenance needs, energy consumption to support their biological functioning during the process of bug fixing, and the overall impact on the environment.\u003c/p\u003e\n\u003cp\u003eAdditionally, the continuous deployment or release cycles, repackaging efforts, and the use of \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Continues Integration\"\u003eCI\u003c/abbr\u003e/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Continues Delivery\"\u003eCD\u003c/abbr\u003e practices all contribute to the \u003cem\u003eecological footprint\u003c/em\u003e. Recompilation for each platform targeted, as well as the network costs associated with distributing binaries or source code to different endpoints, also significantly impact the environment.\u003c/p\u003e\n\u003cp\u003eThe problem of compatibility further compounds the issue. Programming languages with runtimes shipped separately from the package, such as \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.python.org/\"\u003ePython\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://lua.org/\"\u003eLua\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, and other scripting or \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Just-In-Time [compilation]\"\u003eJIT\u003c/abbr\u003e languages, as well as those based on virtual machines like \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Java Virtual Machine\"\u003eJVM\u003c/abbr\u003e, often require reprogramming or the inclusion of older runtime versions when breaking changes occur. This adds to the complexity and environmental impact of software development and packaging.\u003c/p\u003e\n\u003cp\u003eFurthermore, poorly designed programs can accumulate significant technical debt over time, resulting in rewriting. Although the language and toolchain themselves may not directly cause this, the ecosystem surrounding languages like \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"JS\"\u003e\u003ca href=\"https://ecma-international.org/publications-and-standards/standards/ecma-262/\"\u003eJavaScript\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr class=\"language\" title=\"PHP: Hypertext Preprocessor\"\u003e\u003ca href=\"https://www.php.net/\"\u003ePHP\u003c/a\u003e\u003c/abbr\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, and \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.python.org/\"\u003ePython\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   tends to encourage short-term thinking. In contrast, languages like \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.iso.org/standard/74528.html\"\u003eC\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://fortran-lang.org/\"\u003eFortran\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, and others that focus on system-level development promote long-term support and are home to projects that have thrived for several decades.\u003c/p\u003e\n\u003cp\u003eMoreover, the variability in usage patterns must be taken into account. While languages like \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.iso.org/standard/74528.html\"\u003eC\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  and \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"#ZgotmplZ\"\u003eC\u0026#43;\u0026#43;\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n require substantial energy for compilation across different platforms, languages such as \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, and \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.java.com\"\u003eJava\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n mitigate the duplication of energy required to support multiple platforms within a single application.\u003c/p\u003e\n\u003cp\u003eFinally, we must consider the energy expended in the development, maintenance, and support of programming languages. Languages like \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n offer remarkable expressive capabilities, not merely due to better timing or superior thinking but also as a result of extensive collaborative efforts. Conversely, languages like \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://elm-lang.org/\"\u003eElm\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n undergo minimal changes over time.\u003c/p\u003e\n\u003cp\u003eIt is worth emphasizing that the energy required to learn a language, the environmental consequences of mistakes made during coding (e.g., unintentionally sending a million requests to thousands to different servers), variations in energy usage among developers from different countries, and the decreasing lifespan of hardware are all factors that contribute to the overall consideration.\u003c/p\u003e\n\u003ch2 id=\"dear-reader\"\u003eDear Reader\u003c/h2\u003e\n\u003cp\u003eThe crux of the matter is that complexity pervades these considerations, demanding our thoughtful attention and appropriate mitigation for each aspect. Failing to acknowledge and address each facet places us at risk of optimizing solely for one element while sacrificing the other to the extent of rendering our efforts absurd.\u003c/p\u003e\n\u003cp\u003eIt is important to note that I have deliberately omitted discussions about post-harm mitigation. Our focus has been on reducing harm itself. Exploring the costs associated with bootstrapping and averting catastrophic scenarios would expand beyond the scope of this essay.\u003c/p\u003e\n",
            "date_published": "2023-06-21T11:43:00+03:30"
        }, {
            "title": "FLOSS For Software Longevity",
            "id": "https://prma.dev/posts/floss_for_longevity/",
            "url": "https://prma.dev/posts/floss_for_longevity/",
            "summary": "Intro Free/Libre and Open Source Software ( FLOSS) is a captivating realm within software development. What makes FLOSS particularly intriguing is its deviation from conventional business goals, leading to planned longevity and a distinct approach to sustainability.\nReasons Let us delve into the unique qualities of FLOSS and the factors that contribute to its better suitability for longevity.\nThe longevity of the FLOSS business model serves it well The common business models are better suited for short-term goals.",
            "content_html": "\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eFree/Libre and Open Source Software (\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Free/Libre and Open Source Software\"\u003eFLOSS\u003c/abbr\u003e) is a captivating realm within software development. What makes \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Free/Libre and Open Source Software\"\u003eFLOSS\u003c/abbr\u003e particularly intriguing is its deviation from conventional business goals, leading to planned longevity and a distinct approach to sustainability.\u003c/p\u003e\n\u003ch2 id=\"reasons\"\u003eReasons\u003c/h2\u003e\n\u003cp\u003eLet us delve into the unique qualities of \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Free/Libre and Open Source Software\"\u003eFLOSS\u003c/abbr\u003e and the factors that contribute to its better suitability for longevity.\u003c/p\u003e\n\u003ch3 id=\"the-longevity-of-the-business-model-serves-it-well\"\u003eThe longevity of the \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Free/Libre and Open Source Software\"\u003eFLOSS\u003c/abbr\u003e business model serves it well\u003c/h3\u003e\n\u003cp\u003eThe common business models are better suited for short-term goals. There are two major approaches: selling or renting.\u003c/p\u003e\n\u003cp\u003eSmall to mid-sized software companies predominantly prioritize the sale of their products. The concept of product longevity, while acknowledged as necessary, assumes a secondary role rather than being a central objective. Its primary function lies in establishing trust among consumers. Once the initial excitement surrounding the launch of a new and captivating product subsides, these companies swiftly shift their attention to the next innovation. The success of marketing these novel products heavily relies on users\u0026rsquo; fear of missing out and the perceived loss of functionality associated with the previous iteration. Unfortunately, this often leads to the inclusion of unnecessary features, deliberate planning for obsolescence, and resistance against the right to repair. In this cycle, longevity takes a backseat as the perpetual replacement of one product with another takes precedence.\u003c/p\u003e\n\u003cp\u003eConversely, larger companies place a premium on the rental model for software. Instead of users owning the software outright, they opt for subscription-based payment models for continuous usage. One might assume that these companies would prioritize stability to retain their subscribers. However, practical implementation often takes a different route. These companies rely on monopolistic tactics, such as acquiring competitors or launching extensive marketing campaigns to stifle new entrants. In cases where competition persists, they resort to content exclusivity, coercing users to purchase their product alongside competitors\u0026rsquo; offerings. Consequently, users find themselves utilizing these products for prolonged periods not due to their exceptional quality, but rather because they perceive limited alternative options. The subscription model may make sense when paying for a service, but it doesn\u0026rsquo;t align with current software development. Paying subscription for developing and bug-fix of a product is simply paying for the privilege of using an incomplete version of a product.\u003c/p\u003e\n\u003cp\u003eIn contrast, companies adopting a pay-for-enterprise-support model for open-source products, such as Canonical and Red Hat, exhibit commendable practices. Their primary emphasis lies on longevity. If the software is functioning adequately, their tasks are straightforward, eliminating the need to address the same issue repeatedly for each client. Longevity serves as both their evidence and modus operandi. They provide support for software that has already weathered numerous instabilities. They employ different development stages, such as alpha, unstable, stable, and long-term releases. These features can subsequently be passed on to other distributions with more robust objectives, such as REHL.\u003c/p\u003e\n\u003cp\u003eAlthough these companies may impose charges for bug fixes, their underlying offering revolves around selling stability and longevity (think \u003cem\u003eUbuntu Pro\u003c/em\u003e). This approach is not driven solely by inherent benevolence but rather stems from a lack of alternatives. They are unable to monopolize a product that can be cloned, forked, and utilized to initiate independent ventures. Nor can they vend software that others can fork, enhance, and sell at higher prices or even distribute for free. Their sole viable course of action entails creating a product that strikes a balance, avoiding both excessive limitations that render it futile and excessive complexity that complicates support.\u003c/p\u003e\n\u003cp\u003eHowever, business is just one piece of the puzzle.\u003c/p\u003e\n\u003ch3 id=\"engineers-prioritize-quality-over-quantity\"\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Free/Libre and Open Source Software\"\u003eFLOSS\u003c/abbr\u003e engineers prioritize quality over quantity\u003c/h3\u003e\n\u003cp\u003eAs we discussed, most businesses prioritize product quality only until it reaches a level sufficient for selling.\u003c/p\u003e\n\u003cp\u003eThis often leads to engineers being pushed and encouraged to develop faster, sacrificing quality and stability when it hinders \u0026ldquo;beating the competition to market.\u0026rdquo; I\u0026rsquo;m sure I\u0026rsquo;m not alone in feeling dissatisfied with creating instant legacy products and leaving behind a trail of subpar, useless software. It leaves no room for pride in one\u0026rsquo;s work.\u003c/p\u003e\n\u003cp\u003eAs a result, engineers who value quality find satisfaction in other avenues, such as personal projects or contributing to libraries and tools they use themselves.\u003c/p\u003e\n\u003cp\u003eThe dynamics of development in these situations differ. Open-source software often lacks the same level of resources, making maintainability a crucial concern. Allowing technical debt to accumulate in a project one maintains can result in paying a hefty price, even in a short period. The more users a project has, the more the burden of technical debt becomes apparent-quite the opposite of the industry\u0026rsquo;s \u0026ldquo;move broken things, fast\u0026rdquo; mentality.\u003c/p\u003e\n\u003cp\u003eConsequently, successful open-source products tend to have meticulous and uncompromising maintainers.\u003c/p\u003e\n\u003cp\u003eAnother important aspect to consider is that open-source software greatly enhances one\u0026rsquo;s resume. Similar to a resume, open-source projects showcase an individual\u0026rsquo;s best work. They are like first dates, where you present yourself at your best. Consequently, open-source projects motivate developers to create their finest code and documentation.\u003c/p\u003e\n\u003cp\u003eFurthermore, transparency is a vital aspect of open-source projects. Engaging in dubious practices, such as intrusive telemetry, can agitate the surrounding community.\u003c/p\u003e\n\u003cp\u003eIn summary, there are four main reasons:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eThe cost of maintainability\u003c/li\u003e\n\u003cli\u003eThe positive impact on one\u0026rsquo;s resume\u003c/li\u003e\n\u003cli\u003eCounteracting the lack of satisfaction caused by lower quality software in daily work\u003c/li\u003e\n\u003cli\u003eEmbracing transparency\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"exhibits-a-greater-degree-of-diversity-dot\"\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Free/Libre and Open Source Software\"\u003eFLOSS\u003c/abbr\u003e exhibits a greater degree of diversity.\u003c/h3\u003e\n\u003cp\u003eWhen it comes to a biological ecosystem, its resilience stems from the diversity of its members. Let\u0026rsquo;s imagine a scenario involving a moth that feeds on maple tree branches. In a jungle filled with maple trees, the moth can feast and reproduce endlessly. However, there\u0026rsquo;s a twist.\u003c/p\u003e\n\u003cp\u003eAround 10% of the maple trees have developed a variation of their membrane that is toxic to the moth, purely by chance. Now, if the moth tries to feed on these trees, it has a 1 in 10 chance of being fatally poisoned. If there were only a single moth, it would be the end of its lineage. However, imagine a population of 100 moths, and 10% of them have accidentally developed immunity. These \u0026ldquo;super moths\u0026rdquo; may be larger and more resistant to the trees, but they are also more visible to predators like birds. And so, the cycle continues.\u003c/p\u003e\n\u003cp\u003eThe diversity of approaches within a biological ecosystem is crucial. In the context of biological beings, the exchange of random sets of genes through sexual reproduction likely emerged as a means to enhance resilience. Microbes that prey on others, on the other hand, face a more challenging situation, as the result.\u003c/p\u003e\n\u003cp\u003eThese advantageous mechanisms resulting from diversity are also present in the software ecosystem.\u003c/p\u003e\n\u003cp\u003eThe needs and threats faced by a server differ from those faced by a German student\u0026rsquo;s laptop. While Linux is ubiquitous in the open-source desktop realm, there are numerous slightly different Linux distributions available. These variations encompass different themes, preinstalled applications, package managers, and even packaging architecture models. Additionally, there are kernels compiled with different flags and versions.\u003c/p\u003e\n\u003cp\u003eGiven this remarkable diversity, it comes as little astonishment that Microsoft\u0026rsquo;s ardent campaign during the 2000s against the comparably youthful, less cohesive, and resource-limited Linux met with abysmal failure. Strikingly, in a twist of events, Microsoft has lately unveiled its very own Linux distribution and dedicated years to crafting the Windows Subsystem for Linux.\u003c/p\u003e\n\u003cp\u003eTo the proprietary realm, an ecosystem characterized by the development, redesign, and forking of diverse products, yielding a multitude of solutions, may appear inherently inefficient. Yet, from the perspective of permaculture and PermaComputing, such an ecosystem manifests as nothing short of utopia.\u003c/p\u003e\n\u003ch3 id=\"demonstrates-a-higher-level-of-robustness\"\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Free/Libre and Open Source Software\"\u003eFLOSS\u003c/abbr\u003e demonstrates a higher level of robustness\u003c/h3\u003e\n\u003cp\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Free/Libre and Open Source Software\"\u003eFLOSS\u003c/abbr\u003e transcends being a mere generator of independent variations that begin anew each time. It represents a system where progress builds upon existing foundations, with each subsequent layer amplifying the importance of the underlying ones. Irrespective of how many stories above the ground one ascends, the ground level remains a paramount concern if its integrity is jeopardized. Prominent examples of this phenomenon can be observed in projects like curl, the kernel, and OpenSSL. Although these initiatives were initially initiated by individuals, they have evolved into integral components of numerous other undertakings. The driving force compelling many individuals to contribute to these projects stems from the realization that the cost of abstaining from participation would be significantly greater.\u003c/p\u003e\n\u003cp\u003eHowever, it is important to recognize that this process is not always pleasant. Consider the immense pressure on OpenSSL developers. If they were to become overwhelmed and exhausted like many other open-source maintainers, the consequences could be significant.\u003c/p\u003e\n\u003cp\u003eYet, when such challenges arise (and they do), we all become aware of them. We sense the danger and collectively strive to find solutions. This is in stark contrast to the situation when a proprietary software developer abandons a company. Until a replacement is found, users are left unaware and vulnerable to potential security threats posed by malicious hackers.\u003c/p\u003e\n\u003cp\u003eThanks to this collective effort and attention to robustness, many foundational open-source software programs have remained the best tools for the job even after decades of use.\u003c/p\u003e\n\u003ch2 id=\"dear-reader\"\u003eDear Reader\u003c/h2\u003e\n\u003cp\u003eNow, esteemed reader, I trust you comprehend the rationale behind why individuals with a penchant for enduring solutions find the realm of \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Free/Libre and Open Source Software\"\u003eFLOSS\u003c/abbr\u003e far more fertile than its alternatives.\u003c/p\u003e\n",
            "date_published": "2023-06-14T11:26:00+03:30"
        }, {
            "title": "Go Vs Rust readability",
            "id": "https://prma.dev/posts/go_vs_rust_readability/",
            "url": "https://prma.dev/posts/go_vs_rust_readability/",
            "summary": "Intro Traditionally speaking, Go and Rust are not direct competitors on many fronts. Each take different trade-offs. But more often than not, you might need to choose one over the other. It is compared in the niche the other fails. Like low-level system development, which Rust easily rules. Or maybe dev-ops tooling which Go is easily good at it.\nHowever, there are many overlaps in their use case. Think high-performance web-servers.",
            "content_html": "\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eTraditionally speaking, \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n and \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n are not direct competitors on many fronts. Each take different trade-offs. But more often than not, you might need to choose one over the other. It is compared in the niche the other fails. Like low-level system development, which \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n easily rules. Or maybe dev-ops tooling which \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is easily good at it.\u003c/p\u003e\n\u003cp\u003eHowever, there are many overlaps in their use case. Think high-performance web-servers. In those spaces, we should compare other things. Like readability and maintainability of language. In this post, I want to share my thoughts on readability.\u003c/p\u003e\n\u003ch2 id=\"tl-dr\"\u003eTl;DR\u003c/h2\u003e\n\u003cp\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is not less maintainable than \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n because \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is less readable.\u003c/p\u003e\n\u003ch2 id=\"what-i-do-not-disagree-with\"\u003eWhat I do not disagree with\u003c/h2\u003e\n\u003cp\u003eJust to be clear, although I\u0026rsquo;m making a case for \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n and arguing that readability should not be as much concern, I would like to make clear that I\u0026rsquo;m not arguing against these common-sense statements:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is more readable.\u003c/li\u003e\n\u003cli\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n has less overhead for people with no previous experience with language.\u003c/li\u003e\n\u003cli\u003eReadability is generally what you want.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"why-readability-is-good\"\u003eWhy readability is good\u003c/h2\u003e\n\u003cp\u003eEnglish is more readable than any programming language. However, readability is not the only measure that we are using for chosing a language.\u003c/p\u003e\n\u003cp\u003eReadability and clearity are not inherently good, rather it is a proxy for something else we value: A readable code helps us understand the flow of information in order to \u003cstrong\u003eunderstand its logic\u003c/strong\u003e, \u003cstrong\u003ecapture its bugs\u003c/strong\u003e and \u003cstrong\u003eextend it\u003c/strong\u003e, easier. A line of code is read in many situations:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eI want to find out how a piece of code can give rise to a specific runtime bug.\u003c/li\u003e\n\u003cli\u003eI want to audit it to see if it exposes any specific vulnerability, data-race, etc.\u003c/li\u003e\n\u003cli\u003eI want to add features to it, and I want to know where and how I should plug the new functionality to.\u003c/li\u003e\n\u003cli\u003eI want to make a code more robust, document it and make it more available for other people by refactoring it.\u003c/li\u003e\n\u003cli\u003eI want to review the code of my colleague to see if a set of fresh eyes could capture a new bug, or an inconsistent styling with the rest of the codebase.\u003c/li\u003e\n\u003cli\u003eI want to understand what a code base does. Maybe I\u0026rsquo;m trying to see if a  software is spying on me, or maybe I\u0026rsquo;m trying to understand the way it calculated my taxes.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThese are all noble pursuits. And in all these cases, readability is vital in preventing disasters and better experience in onboarding others.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u0026rsquo;s readability is probably one of its best features. At my current and previous jobs, I have had to jump into different code bases with different levels of legacy and problematic codebases where junior developers with no-idea of idiomatic ways of coding \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n left their projects without any context for the next developer.\nSuch low quality codes should take forever for one to decode. However, because of the beautifully simple syntax of \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, I could start to be productive and sending PRs in less than a day. Have you seen a codebase where all the back-end code was coded by a narcissistic lone-wolf meth-addict? Well, I have, and it\u0026rsquo;s an absolute shit-show. Yet, I committed my first edits in 3 hours. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is excellent at that. And I can understand how a huge tech company with very quick employee turn-over can give rise to such language. Kudos to the \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://go.dev/\"\u003eGo\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n team.\u003c/p\u003e\n",
            "date_published": "2023-04-14T23:49:00+03:30"
        }, {
            "title": "Moving in Rust is Pure",
            "id": "https://prma.dev/posts/moving_is_pure/",
            "url": "https://prma.dev/posts/moving_is_pure/",
            "summary": "Intro The act of moving arguments within Rust \u0026rsquo;s functions serves as a compelling means to uphold the purity of the function. By embracing this practice, we ensure that the function operates on unique ownership of its inputs, preserving the integrity and immutability of data, which are fundamental tenets of functional programming.\nMoving a Variable to a Function in Rust Doesn\u0026rsquo;t Make It Impure So as an introduction, if you don\u0026rsquo;t know Rust .",
            "content_html": "\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eThe act of moving arguments within \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u0026rsquo;s functions serves as a compelling means to uphold the \u003cem\u003epurity\u003c/em\u003e of the function. By embracing this practice, we ensure that the function operates on unique ownership of its inputs, preserving the integrity and \u003cem\u003eimmutability\u003c/em\u003e of data, which are fundamental tenets of \u003cem\u003efunctional programming\u003c/em\u003e.\u003c/p\u003e\n\u003ch2 id=\"moving-a-variable-to-a-function-in-doesn-t-make-it-impure\"\u003eMoving a Variable to a Function in \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Doesn\u0026rsquo;t Make It Impure\u003c/h2\u003e\n\u003cp\u003eSo as an introduction, if you don\u0026rsquo;t know \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.\u003c/p\u003e\n\u003cp\u003eIn \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, we have this concept of \u003cem\u003emoving\u003c/em\u003e variables. It is like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e//  A variable is made.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e a_variable = some_value;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e// It moves into this function.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e_ = a_function_that_takes_ownership(a_variable);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e// We cannot use a_variable anymore! So, we cannot do this!\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e b_variable = a_variable;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow I consider \u003ccode\u003ea_function_that_takes_ownership\u003c/code\u003e to be a \u003cem\u003epure function\u003c/em\u003e. However, it raises a possible confusion:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDoesn\u0026rsquo;t a_function_that_takes_ownership change the state of the outer function? Isn\u0026rsquo;t that a side effect?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI argue that it doesn\u0026rsquo;t. Here is why: a function is not a function call. Ok. let\u0026rsquo;s visualize it.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      ________outer_function_______\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e--in-\u0026gt;|       __inner_f___        |-out-\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      | -in-\u0026gt; |          | -out-\u0026gt; |\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      |       ------------        |\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      -----------------------------\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo we have two functions. One outer, and one inner.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEach function should have inputs and an output.\u003c/li\u003e\n\u003cli\u003eOther than their outputs, they should not change anything outside their function space.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIf these conditions are not met, our function is not \u003cem\u003epure\u003c/em\u003e.\u003c/p\u003e\n\u003ch3 id=\"step-1\"\u003eStep 1\u003c/h3\u003e\n\u003cp\u003eNow consider a variable \u003ccode\u003e[V]\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      _____________________________\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-----\u0026gt;| [v]   ____________        |-----\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      | ----\u0026gt; |          | -----\u0026gt; |\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      |       ------------        |\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      -----------------------------\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"step-2\"\u003eStep 2\u003c/h3\u003e\n\u003cp\u003eWith our outer function, we create a function call for the inner function.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      _____________________________\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-----\u0026gt;|       ____________        |-----\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      | [v]-\u0026gt; |          | -----\u0026gt; |\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      |       ------------        |\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      -----------------------------\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"step-3\"\u003eStep 3\u003c/h3\u003e\n\u003cp\u003eIt is no longer in the state space of the outer function. The inner function takes \u003cem\u003eownership\u003c/em\u003e of it.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      _____________________________\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-----\u0026gt;|       ____________        |-----\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      | ----\u0026gt; |   [v]    | -----\u0026gt; |\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      |       ------------        |\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      -----------------------------\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSemantically, for the outer function \u003ccode\u003e[v]\u003c/code\u003e was used in the function call and then dropped. Which does not violate our rules. For the inner function, it just got an input and returns an output. So it makes sematic sense.\u003c/p\u003e\n\u003cp\u003eIn practice, it also makes the same guarantees as any other \u003cem\u003epure function\u003c/em\u003e: - No null pointers. - No \u003cem\u003emutable state\u003c/em\u003e. - No \u003cem\u003eside effects\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eIf the caller \u003ccode\u003e.clone()\u003c/code\u003e our value and make a copy of it and pass that to the inner function, it provides us with no other guarantees, other than more memory usage and slightly longer code.\u003c/p\u003e\n\u003ch2 id=\"why-does-it-matter\"\u003eWhy does it matter?\u003c/h2\u003e\n\u003cp\u003eWell, Honestly, it doesn\u0026rsquo;t. I just had to decide if in a \u003cem\u003epure function\u003c/em\u003e I can consume a self, if I want to make it a \u003cem\u003epure function\u003c/em\u003e, considering that I cannot make it \u003cem\u003econst\u003c/em\u003e. This was my thinking output. Now you are the outer function.\u003c/p\u003e\n",
            "date_published": "2023-04-09T10:44:00+03:30"
        }, {
            "title": "Pure Rust",
            "id": "https://prma.dev/posts/pure_rust/",
            "url": "https://prma.dev/posts/pure_rust/",
            "summary": "Intro If you are not familiar with Functional Programming FP, you are in for a ride. I will try to explain FP in more practical terms.\nA definition to work with FP is a declarative way of writing a program that consists mostly of pure functions that operate on and produce immutable data. That was many other unfamiliar words. Let\u0026rsquo;s make it concrete.\nMaking it more concrete Here is a function in Rust that we will work on:",
            "content_html": "\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eIf you are not familiar with Functional Programming \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Functional Programming\"\u003eFP\u003c/abbr\u003e, you are in for a ride.\nI will try to explain \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Functional Programming\"\u003eFP\u003c/abbr\u003e in more practical terms.\u003c/p\u003e\n\u003ch2 id=\"a-definition-to-work-with\"\u003eA definition to work with\u003c/h2\u003e\n\u003cp\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Functional Programming\"\u003eFP\u003c/abbr\u003e is a \u003cdfn\u003edeclarative\u003c/dfn\u003e way of writing a program that consists mostly of \u003cem\u003epure functions\u003c/em\u003e that operate on and produce \u003cem\u003eimmutable data\u003c/em\u003e.\nThat was many other unfamiliar words. Let\u0026rsquo;s make it concrete.\u003c/p\u003e\n\u003ch2 id=\"making-it-more-concrete\"\u003eMaking it more concrete\u003c/h2\u003e\n\u003cp\u003eHere is a function in \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n that we will work on:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#888;font-style:italic\"\u003e// Calling `calculate_my_lateness` seems like magic.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e  \u003cspan style=\"color:#888;font-style:italic\"\u003e// We don\u0026#39;t know how it calculates it, and why it is doing that.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e  \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e \u003cspan style=\"font-weight:bold\"\u003emut\u003c/span\u003e status: \u003cspan style=\"font-weight:bold\"\u003ebool\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  calculate_my_lateness(\u0026amp;\u003cspan style=\"font-weight:bold\"\u003emut\u003c/span\u003e status);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#888;font-style:italic\"\u003e// This sometimes crashes and sometimes, it does not.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e  assert_eq!(status, \u003cspan style=\"font-weight:bold\"\u003etrue\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e// The point of this function is to tell us if we are late\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e// Ask yourself, how would you write a test for such a function?\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003ecalculate_my_lateness\u003c/span\u003e(status: \u003cspan style=\"font-weight:bold\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003emut\u003c/span\u003e \u003cspan style=\"font-weight:bold\"\u003ebool\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e current_time = std::time::SystemTime::now();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e expected_time = std::time::SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSOME_SPECIFIED_TIME\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    status = current_time \u0026lt;= date_time;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow, let\u0026rsquo;s make it \u003cem\u003epure\u003c/em\u003e and while we are at it, we introduce \u003cem\u003epure functions\u003c/em\u003e and some principles as well.\u003c/p\u003e\n\u003ch3 id=\"pure-functions-return-at-least-one-output\"\u003ePure functions return at least one output\u003c/h3\u003e\n\u003cp\u003eThat means that if you have a function named \u003ccode\u003esome_function\u003c/code\u003e, you will have at least one argument \u003ccode\u003esome_input\u003c/code\u003e and it will return at least one output \u003ccode\u003esome_output\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003esome_function\u003c/span\u003e(some_input) -\u0026gt; \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003esome_output\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWhy do we do this? When we are calling a function, we are expecting \u003cspan class=\"underline\"\u003esomething\u003c/span\u003e to happen.\nIn \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Functional Programming\"\u003eFP\u003c/abbr\u003e world, the only acceptable \u003cem\u003esomething\u003c/em\u003e is an output argument.\nA lack of output is \u003cem\u003esymptomatic\u003c/em\u003e of one of these two unacceptable situations:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eOur function does nothing\u003c/strong\u003e. In which case, why are we even bothering to write it at all?\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eOur function is doing a side effect\u003c/strong\u003e. Which means that it is changing something other than what is inside the function.\nThese functions don\u0026rsquo;t let us know or control what they are doing inside, without making us look at the source code.\nWe will get back to this throughout this post.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003ePlease note the emphasis on \u003cem\u003esymptomatic\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eSo let\u0026rsquo;s make it return the output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e \u003cspan style=\"font-weight:bold\"\u003emut\u003c/span\u003e status: \u003cspan style=\"font-weight:bold\"\u003ebool\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e output = calculate_my_lateness(\u0026amp;\u003cspan style=\"font-weight:bold\"\u003emut\u003c/span\u003e status);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#888;font-style:italic\"\u003e//--^^^^^^------------ we have an output now\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  assert_eq!(output, \u003cspan style=\"font-weight:bold\"\u003etrue\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#888;font-style:italic\"\u003e//---------^^^^^^----- which we use here\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003ecalculate_my_lateness\u003c/span\u003e(status: \u003cspan style=\"font-weight:bold\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003emut\u003c/span\u003e \u003cspan style=\"font-weight:bold\"\u003ebool\u003c/span\u003e) -\u0026gt; \u003cspan style=\"font-weight:bold\"\u003ebool\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#888;font-style:italic\"\u003e//-notice that we are returning something--^^^^--\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e current_time = std::time::SystemTime::now();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e expected_time = std::time::SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSOME_SPECIFIED_TIME\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    status = current_time \u0026lt;= date_time;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    status \u003cspan style=\"color:#888;font-style:italic\"\u003e// \u0026lt;- what we are returning\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"pure-functions-don-t-mutate-state\"\u003ePure functions don\u0026rsquo;t mutate state\u003c/h3\u003e\n\u003cp\u003eAs I mentioned before, a function does something when it returns something and changes the state of something outside itself.\nWe call that a \u003cdfn\u003eside-effect\u003c/dfn\u003e.\nYou may have noticed that our function takes a mutable variable of type \u003ccode\u003ebool\u003c/code\u003e and changes it.\nIn our first iteration of the function, we needed it. But now, we grew out of it. So let\u0026rsquo;s just delete it.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#888;font-style:italic\"\u003e// let mut status: bool;  \u0026lt;- we don\u0026#39;t need this\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e output = calculate_my_lateness();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#888;font-style:italic\"\u003e//--------------------------------^ we don\u0026#39;t need to take status any more\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  assert_eq!(output, \u003cspan style=\"font-weight:bold\"\u003etrue\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003ecalculate_my_lateness\u003c/span\u003e() -\u0026gt; \u003cspan style=\"font-weight:bold\"\u003ebool\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#888;font-style:italic\"\u003e//------------------^^- we don\u0026#39;t need to take a mutable variable\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e current_time = std::time::SystemTime::now();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e expected_time = std::time::SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSOME_SPECIFIED_TIME\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    current_time \u0026lt;= date_time \u003cspan style=\"color:#888;font-style:italic\"\u003e//  \u0026lt;- what we are returning\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow isn\u0026rsquo;t this better? When I call \u003ccode\u003ecalculate_my_lateness()\u003c/code\u003e\nI\u0026rsquo;m not worried about the function changing anything it\u0026rsquo;s not supposed to anymore.\nLet\u0026rsquo;s move on.\u003c/p\u003e\n\u003ch3 id=\"pure-functions-return-output-only-based-on-their-argument\"\u003ePure functions return output only based on their argument\u003c/h3\u003e\n\u003cp\u003eWhich means that when I call \u003ccode\u003ecalculate_my_lateness()\u003c/code\u003e, I should not expect it to do something different each time I run it.\nWhy is that? There are two reasons:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eTransparency\u003c/strong\u003e: You should know what parameters change the output of a function, without needing to reading the function body.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTesting\u003c/strong\u003e: It is hell of a lot easier to test a function that you can just control without needing to change the time of your computer. Won\u0026rsquo;t you say?\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eLet\u0026rsquo;s do it in two steps this time.\u003c/p\u003e\n\u003ch4 id=\"step-one-don-t-use-global-variables\"\u003eStep one: Don\u0026rsquo;t use global variables\u003c/h4\u003e\n\u003cp\u003eyou may have noticed \u003ccode\u003eSOME_SPECIFIED_TIME\u003c/code\u003e.\nThis is a variable we use to make a \u003ccode\u003eSystemTime\u003c/code\u003e which we compare current time with to know if we are late or not.\nThe problem here is these two:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eWe need to write a new function, each time we have a new meeting.\u003c/li\u003e\n\u003cli\u003eWe also don\u0026rsquo;t know what time current time is being compared to, unless we first read the function, and then find out what it uses as \u003ccode\u003eSOME_SPECIFIED_TIME\u003c/code\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e output = calculate_my_lateness(SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSOME_SPECIFIED_TIME\u003c/span\u003e));\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#888;font-style:italic\"\u003e//---------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e  \u003cspan style=\"color:#888;font-style:italic\"\u003e// now the caller is supposed to provide the time\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  assert_eq!(output, \u003cspan style=\"font-weight:bold\"\u003etrue\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003ecalculate_my_lateness\u003c/span\u003e(late_as_of: \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSystemTime\u003c/span\u003e) -\u0026gt; \u003cspan style=\"font-weight:bold\"\u003ebool\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#888;font-style:italic\"\u003e//-------------------^^^^^^^^^^^^^^^^^^^^^^-----------\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e current_time = std::time::SystemTime::now();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    current_time \u0026lt;= late_as_of\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"step-two-don-t-use-functions-with-side-effects-inside-your-function\"\u003eStep Two: don\u0026rsquo;t use functions with side effects inside your function\u003c/h4\u003e\n\u003cp\u003eImagine that you have a non-alcoholic drink, if you add another non-alcoholic drink to it, it is still non-alcoholic.\nBut if you add an alcoholic drink to it, it will not remain non-alcoholic anymore.\nA pure function is only pure, if all the functions that are being called in it, are pure.\nAnd \u003ccode\u003estd::time:SystemTime::now()\u003c/code\u003e is definitely not pure.\nNow, at some point we need to get the current time, but we don\u0026rsquo;t need to do that where it is hidden from the caller.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e output = calculate_my_lateness(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                   SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSOME_SPECIFIED_TIME\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                   SystemTime::now(),\u003cspan style=\"color:#888;font-style:italic\"\u003e//\u0026lt;------ we provide the time\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e  );\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  assert_eq!(output, \u003cspan style=\"font-weight:bold\"\u003etrue\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003ecalculate_my_lateness\u003c/span\u003e(late_as_of: \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSystemTime\u003c/span\u003e, target_time: \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSystemTime\u003c/span\u003e ) -\u0026gt; \u003cspan style=\"font-weight:bold\"\u003ebool\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#888;font-style:italic\"\u003e//-------------------------------------------^^^^^^^^^^^^^^^^^^^^^^^-----------\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e    target_time \u0026lt;= late_as_of\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow the nice thing here is that we can easily test this function now!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e// main and calculate_my_lateness are not shown here. Don\u0026#39;t be alarmed.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-weight:bold\"\u003e#[cfg(test)]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold\"\u003emod\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003etests\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-weight:bold\"\u003euse\u003c/span\u003e \u003cspan style=\"font-weight:bold\"\u003esuper\u003c/span\u003e::calculate_my_lateness;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-weight:bold\"\u003euse\u003c/span\u003e std::time::SystemTime;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#888;font-weight:bold\"\u003e#[test]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003ebeing_late_works\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e res = calculate_my_lateness(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eA_TIME\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eA_TIME_THAT_IS_AFTER_LATE_TIME\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        );\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        assert_eq!(res, \u003cspan style=\"font-weight:bold\"\u003etrue\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#888;font-weight:bold\"\u003e#[test]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003ebeing_early_works\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e res = calculate_my_lateness(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eA_TIME\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eA_TIME_THAT_IS_BEFORE_LATE_TIME\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        );\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        assert_eq!(res, \u003cspan style=\"font-weight:bold\"\u003efalse\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eImagine doing this with the first function!\u003c/p\u003e\n\u003ch4 id=\"one-more-step\"\u003eOne more step\u003c/h4\u003e\n\u003cp\u003eOK, I lied\u0026hellip; Somewhat. Have you noticed the one glaring, lack of transparency and control here?\nIt\u0026rsquo;s the \u003ccode\u003e\u0026lt;=\u003c/code\u003e. You may need to read the function here, if you have this simple question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf I call the function exactly, at the precise moment that I specified to be \u003ccode\u003elate_as_of\u003c/code\u003e, will return true, or false?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eNow, not answering this question using the function signature,won\u0026rsquo;t make my function less pure,but still, it is a much nicer experience for the caller to be able to rely on their IDE\u0026rsquo;s autocomplete to tell them what happens.But how the hell should we do that? Easy! We take a comparator function as input!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e output = calculate_my_lateness(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                   SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSOME_SPECIFIED_TIME\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                   SystemTime::now(),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                   |late, target| target \u0026gt; late, \u003cspan style=\"color:#888;font-style:italic\"\u003e// here the caller passes the function\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e                                                 \u003cspan style=\"color:#888;font-style:italic\"\u003e// you can also provide a few different functions yourself to make it easier for the caller\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e  );\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  assert_eq!(output, \u003cspan style=\"font-weight:bold\"\u003etrue\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003ecalculate_my_lateness\u003c/span\u003e(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    late_as_of: \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSystemTime\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    target_time: \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSystemTime\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    comparer: \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003efn\u003c/span\u003e(SystemTime, SystemTime) -\u0026gt; \u003cspan style=\"font-weight:bold\"\u003ebool\u003c/span\u003e, \u003cspan style=\"color:#888;font-style:italic\"\u003e// magic happens here\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e) -\u0026gt; \u003cspan style=\"font-weight:bold\"\u003ebool\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    comparer(late_as_of, target_time)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow the caller is providing us we have everything we need. We did not hide one single thing.\u003c/p\u003e\n\u003ch3 id=\"isn-t-this-just-more-work-for-caller\"\u003eIsn\u0026rsquo;t this just more work for caller?\u003c/h3\u003e\n\u003cp\u003eWell, yes. Yes, it is\u0026hellip; if calling functions without understanding them is the only work that the caller of our function is doing.\nOtherwise, our caller knows everything they need using their language server, can change everything they need, have the assurance of our tests and don\u0026rsquo;t need to crawl through our source code, and they will face much fewer bugs where they don\u0026rsquo;t know where it came from.\nIt may seem unnecessary for this simple function, but imagine much more complex functions.\u003c/p\u003e\n\u003ch2 id=\"making-things-nicer-a-spicy-problem\"\u003eMaking things nicer: A spicy problem\u003c/h2\u003e\n\u003cp\u003eSo we have all this power and transparency.\nBut the elephant is in it room: We have a very shitty \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Application Programming Interface\"\u003eAPI\u003c/abbr\u003e.\nLet\u0026rsquo;s make it nicer using a technique called \u003cdfn\u003ecurrying\u003c/dfn\u003e (hence the \u0026ldquo;spicy\u0026rdquo; pun).\nWhat it means is: as well as taking functions as argument, we can return functions.\nThat way, our \u003ccode\u003ecalculate_my_lateness\u003c/code\u003e function can become a function-maker.\nLet me make it more concrete.\u003c/p\u003e\n\u003ch3 id=\"consider-the-use-case\"\u003eConsider the use case\u003c/h3\u003e\n\u003cp\u003eLet us suppose that we want to find time in our list of times that is not late.\nCurrently, we have to call the whole function, repeatedly, and include every argument.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e// we are in main, don\u0026#39;t be alarmed\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e output_time1 = calculate_my_lateness(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSOME_SPECIFIED_TIME\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eFIRST_TIME\u003c/span\u003e), \u003cspan style=\"color:#888;font-style:italic\"\u003e//\u0026lt;------ we provide the time\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e    |late, target| target \u0026gt; late,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e output_time2 = calculate_my_lateness(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSOME_SPECIFIED_TIME\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSECOND_TIME\u003c/span\u003e), \u003cspan style=\"color:#888;font-style:italic\"\u003e//\u0026lt;------ we provide the time\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e    |late, target| target \u0026gt; late,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e output_time3 = calculate_my_lateness(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSOME_SPECIFIED_TIME\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eTHIRD_TIME\u003c/span\u003e), \u003cspan style=\"color:#888;font-style:italic\"\u003e//\u0026lt;------ we provide the time\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e    |late, target| target \u0026gt; late,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e// etc...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis is not great.\nHere, We can just make a function that only takes our target time.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003ecalculate_my_lateness\u003c/span\u003e(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    late_as_of: \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSystemTime\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#888;font-style:italic\"\u003e// target_time: SystemTime \u0026lt;------------ we don\u0026#39;t need to take this argument anymore\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e    comparer: \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003efn\u003c/span\u003e(late_as_of: \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSystemTime\u003c/span\u003e, target_time: \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSystemTime\u003c/span\u003e) -\u0026gt; \u003cspan style=\"font-weight:bold\"\u003ebool\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e) -\u0026gt; \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003efn\u003c/span\u003e(target_time: \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSystemTime\u003c/span\u003e) -\u0026gt; \u003cspan style=\"font-weight:bold\"\u003ebool\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e     \u003cspan style=\"color:#888;font-style:italic\"\u003e//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---- notice that we are now returning a function\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    |target_time: \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSystemTime\u003c/span\u003e| -\u0026gt; \u003cspan style=\"font-weight:bold\"\u003ebool\u003c/span\u003e { comparer(target_time, late_as_of) }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#888;font-style:italic\"\u003e//^^^^^^^^^^^^^^^^^^^^^^           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#888;font-style:italic\"\u003e//         |                this is where the calculation of lateness happens\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#888;font-style:italic\"\u003e// we are taking target time here\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e }\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou might ask, \u0026ldquo;well, how does this help?\u0026rdquo;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e// we are in  main\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e// now our late_before_time_x is not of type bool,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e// rather it is of type Fn(SystemTime) -\u0026gt; bool\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e late_before_time_x = calculate_my_lateness(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    SystemTime::from(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSOME_SPECIFIED_TIME\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    |late, target| target \u0026gt; late,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e// So we can just:\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e\u003c/span\u003e\u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e first_result = late_before_time_x(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eFIRST_TIME\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e second_result = late_before_time_x(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eSECOND_TIME\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold;font-style:italic\"\u003elet\u003c/span\u003e third_result = late_before_time_x(\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eTHIRD_TIME\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e// ...much less boilerplate\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"why-const-just-won-t-do\"\u003eWhy \u003ccode\u003econst\u003c/code\u003e just won\u0026rsquo;t do\u003c/h3\u003e\n\u003cp\u003eVeteran rustaceans among the readers of this blog might ask: \u0026ldquo;why not just use \u003ccode\u003econst\u003c/code\u003e to mark that functions are pure?\u0026rdquo;\nWell dear veteran, if you can make a function \u003ccode\u003econst\u003c/code\u003e, do every one a favor and actually do it.\nIn fact, I regularly use \u003ccode\u003eclippy::missing_const_for_fn\u003c/code\u003e lint and suggest you to use it as well.\nBut that does not guarantee that our functions are pure, or that every pure function can be \u003ccode\u003econst\u003c/code\u003e.\nHere are my reasons:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003econst\u003c/code\u003e functions can take \u003ccode\u003e\u0026amp;mut something\u003c/code\u003e as their arguments. Taking mutable references is definitely not very pure-function-y.\u003c/li\u003e\n\u003cli\u003eYou cannot \u003ccode\u003econst\u003c/code\u003e trait methods in stable \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, as of now. And considering that every function call inside a \u003ccode\u003econst\u003c/code\u003e function should be \u003ccode\u003econst\u003c/code\u003e as well, you are extremely limited, without any reasons that have to do with pure functions.\u003c/li\u003e\n\u003cli\u003eMany libraries don\u0026rsquo;t to use \u003ccode\u003econst\u003c/code\u003e on the functions that are \u003ccode\u003econst\u003c/code\u003e. Again, limitation without pureness reasons.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"making-things-declarative\"\u003eMaking things declarative\u003c/h2\u003e\n\u003cp\u003eThere is this often repeated old joke that says:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThere two hard problems in programming\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCache invalidation\u003c/li\u003e\n\u003cli\u003eNaming things\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u0026ndash; \u003cspan class=\"person p-name\"\u003ePhil Karlton\u003c/span\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAnd here we are concerned with the second one.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIn the \u003cstrong\u003eimperative\u003c/strong\u003e universe, we usually name our functions using \u003cem\u003everbs\u003c/em\u003e. Think \u003ccode\u003ecalculate_my_lateness\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eIn the \u003cstrong\u003edeclarative\u003c/strong\u003e universe we are concerned with our output, we use \u003cem\u003enouns\u003c/em\u003e. Think \u003ccode\u003elateness_calculator\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThis makes the intent of our function clear.\nHow it is implemented under-the-hood is not what matters to the caller.\nThey only care about what they get out of it.\nIf you now are thinking that you cared about that part before, consider the things that we just can answer by seeing the arguments that our function takes.\nWe don\u0026rsquo;t need to rely on our function name anymore to tell use how the function is calculating lateness.\nWe only need to know what it\u0026rsquo;s intention is.\u003c/p\u003e\n\u003ch2 id=\"dear-reader\"\u003eDear Reader\u003c/h2\u003e\n\u003cp\u003eIn this post, I just preferred to focus on the heart of \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Functional Programming\"\u003eFP\u003c/abbr\u003e: \u003cem\u003epure declarative functions\u003c/em\u003e.\nHowever, functional programming brings with it a set of extremely useful tools, patterns, etc. most well known are \u003cem\u003eiterators\u003c/em\u003e, \u003cem\u003emaps\u003c/em\u003e, \u003cem\u003efolds\u003c/em\u003e, \u003cem\u003efilters\u003c/em\u003e, etc.\nHonestly, they are well explained in other resources. My only suggestion would be to check out \u003ca href=\"https://docs.rs/itertools/latest/itertools/\"\u003eitertools\u003c/a\u003e crate.\u003c/p\u003e\n",
            "date_published": "2023-03-25T22:36:00+03:30"
        }, {
            "title": "Hachyderm or Fosstodon",
            "id": "https://prma.dev/posts/hachyderm_or_fosstodon/",
            "url": "https://prma.dev/posts/hachyderm_or_fosstodon/",
            "summary": "Intro Ever since I have moved to the mastodon platform after the great twitter migration. I was curious about two main instances. One being Fosstodon, an instance oriented around FOSS, another being Hachyderm, an instance that introduces itself as social media for technical professionals.\nEventualy, I decided to go with Fosstodon, as I liked what I was seeing there more. But I couldn\u0026rsquo;t put my finger on what it was that I liked more about Fosstodon, even though many of my favorite people resided on Hachyderm, the instance owner of the Hachyderm herself, being one examples.",
            "content_html": "\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eEver since I have moved to the mastodon platform after \u003cem\u003ethe great twitter migration\u003c/em\u003e. I was curious about two main instances.\nOne being \u003ca href=\"https://fosstodon.org\"\u003eFosstodon\u003c/a\u003e, an instance oriented around  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Free and Open Source Software\"\u003eFOSS\u003c/abbr\u003e, another being \u003ca href=\"https://hachyderm.io\"\u003eHachyderm\u003c/a\u003e, an instance that introduces itself as social media for technical professionals.\u003c/p\u003e\n\u003cp\u003eEventualy, I decided to go with Fosstodon, as I liked what I was seeing there more.\nBut I couldn\u0026rsquo;t put my finger on what it was that I liked more about Fosstodon, even though many of my favorite people resided on Hachyderm, the instance owner of the Hachyderm herself, being one examples.\u003c/p\u003e\n\u003ch2 id=\"initial-theories\"\u003eInitial Theories\u003c/h2\u003e\n\u003cp\u003eInitially I thought Hachyderm was more business-oriented. It seemed that people on Hachyderm were more interested about talking about broader technologies like \u003cem\u003ekubernetes\u003c/em\u003e and \u003cem\u003edocker\u003c/em\u003e, while at the same time there was a lot of talk about codes and \u003cem\u003eprogramming practices\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eI thought maybe all the programmers on Hachyderm are working with more proprietory and enterprise solutions and as such they were less likely to share details of their daily programming.\u003c/p\u003e\n\u003cp\u003eBut that theory didn\u0026rsquo;t hold true, as there was as much toots in my timeline on Fosstodon about bussiness related stuff as there was on Hachyderm.\u003c/p\u003e\n\u003cp\u003eUntil last night that I realized that maybe what I was seeing was the difference of ideas between operations interested people vs people involved in developing software. And as a backend-developer, I could see more relevant content from the development side.\u003c/p\u003e\n\u003cp\u003eSo I set to examine my assumptions.\nLike a good \u003ca href=\"https://www.lesswrong.com/tag/bayes-theorem\"\u003eBayesian\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"apis-searches-and-methods\"\u003eAPIs, Searches and Methods\u003c/h2\u003e\n\u003cp\u003eto start with, I looked into different websites that could help me search per-instance results.\nThat way I could search differnet keywords in each instance and compare the results.\nHowever I could not find such a thing. Every search engine I tried lacked the ability of filtering by instance.\u003c/p\u003e\n\u003cp\u003eAfter that, I looked into the Mastodon \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Application Programming Interface\"\u003eAPI\u003c/abbr\u003es myself.\nLong-story short, I found \u003ca href=\"https://docs.joinmastodon.org/methods/timelines/#tag\"\u003etimeline API\u003c/a\u003e to be particularly useful:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-http\" data-lang=\"http\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003eGET\u003c/span\u003e \u003cspan style=\"color:#666;font-weight:bold;font-style:italic\"\u003e/api/v1/timelines/tag/:hashtag\u003c/span\u003e \u003cspan style=\"font-weight:bold\"\u003eHTTP\u003c/span\u003e/1.1\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eUsing this I could get a list of toots in \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"JavaScript Object Notation\"\u003eJSON\u003c/abbr\u003e format that had specific hashtags.\nAnd then filter those results to only get the actual url.\nI used \u003ccode\u003ecurl\u003c/code\u003e to make \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cabbr title=\"Application Programming Interface\"\u003eAPI\u003c/abbr\u003e requests and \u003ccode\u003ejq\u003c/code\u003e to filter-out the keys I was not interested in.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/container?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd then, I had to filter out results that were not from Hachyderm or Fosstodon. And Sort each\nFor filtering \u003ccode\u003eawk\u003c/code\u003e was perfect, and then for sorting the \u003ccode\u003esort\u003c/code\u003e command is good enough.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eawk \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;/fosstodon|hachyderm/ {print $0}\u0026#39;\u003c/span\u003e hash.json | sort \u0026gt; res-ops\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eI just had to come up with a few keywords that I could associate more with operations and a few for development.\u003c/p\u003e\n\u003cdiv class=\"note\"\u003e\n\u003cp\u003eAs you may have noticed, my methodoloy is hardly scientific and and extremly relient on subjective definitions.\nMy goal was to find a good-enough-for-my-decision result. Not anything more.\u003c/p\u003e\n\u003c/div\u003e\n\u003cp\u003eI ended up with these words on differnt sides:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eOperations\u003c/th\u003e\n\u003cth\u003eDevelopment\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eKubernetes\u003c/td\u003e\n\u003ctd\u003eRefactor\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eMontioring\u003c/td\u003e\n\u003ctd\u003eDebugging\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDocker\u003c/td\u003e\n\u003ctd\u003eGreenfield\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eContainer\u003c/td\u003e\n\u003ctd\u003eFramework\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eTerraform\u003c/td\u003e\n\u003ctd\u003eCompiler\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDeploy\u003c/td\u003e\n\u003ctd\u003eInterpreter\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eBaremetal\u003c/td\u003e\n\u003ctd\u003eTesting\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eVm\u003c/td\u003e\n\u003ctd\u003eIde\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eAdmin\u003c/td\u003e\n\u003ctd\u003eLibrary\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eServer\u003c/td\u003e\n\u003ctd\u003eDesignPatterns\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e_\u003c/td\u003e\n\u003ctd\u003eLSP\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e_\u003c/td\u003e\n\u003ctd\u003e\u003cspan class=\"language\"\u003eNodeJS\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e_\u003c/td\u003e\n\u003ctd\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003ca class=\"language\" href=\"https://www.rust-lang.org/\"\u003eRust\u003c/a\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e_\u003c/td\u003e\n\u003ctd\u003eAuth\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eThe differnece in their numbers are not important to us, only the proportions of the results of each may be relevant.\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003eThe eventual code looks like this.\u003c/summary\u003e\n\u003cdiv class=\"details\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-weight:bold\"\u003e#! /usr/bin/env bash\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-weight:bold\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e# this part gives us a file with results of the OPs-related keywords\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/kubernetes?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/docker?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/container?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/operations?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/terraform?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/deploy?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/baremetal?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/vm?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/monitoring?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/admin?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/server?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eawk \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;/fosstodon|hachyderm/ {print $0}\u0026#39;\u003c/span\u003e hash.json | sort \u0026gt; res-ops \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erm hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#888;font-style:italic\"\u003e# this part gives us a file with results of the Devs-related keywords\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/develop?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/refactor?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/greenfield?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/framework?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/compiler?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/interpreter?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/testing?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/ide?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/library?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/development?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/designpatterns?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/lsp?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/nodejs?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/rust?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/auth?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;https://hachyderm.io/api/v1/timelines/tag/debuggin?\u0026amp;limit=1000\u0026#39;\u003c/span\u003e | jq \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;.[].url\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; hash.json \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eawk \u003cspan style=\"color:#666;font-style:italic\"\u003e\u0026#39;/fosstodon|hachyderm/ {print $0}\u0026#39;\u003c/span\u003e hash.json | sort \u0026gt; res-develop \u0026amp;\u0026amp;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erm hash.json\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/details\u003e\n\u003ch2 id=\"the-result\"\u003eThe Result\u003c/h2\u003e\n\u003cp\u003eOn the ops query we have \u003ccode\u003e32\u003c/code\u003e toots from Fosstodon and \u003ccode\u003e44\u003c/code\u003e toots from Hachyderm.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFosstodon â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eHachyderm â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo far Hachyderm seems to have more activity with Operations related hashtags.\nOn the other hand it could be that people on Hachyderm are generally more talkative than Fosstodon about every part of the stack.\nSo let\u0026rsquo;s hold development as the control.\u003c/p\u003e\n\u003cp\u003eOn the development queries we have \u003ccode\u003e49\u003c/code\u003e results from Fosstodon and \u003ccode\u003e24\u003c/code\u003e results from Hachyderm.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFosstodon â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eHachyderm â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThat seems like an staggering differece.Â \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\u003ch2 id=\"dear-reader\"\u003eDear Reader\u003c/h2\u003e\n\u003cp\u003eI have no idea why this difference is so harsh. But for my purposes I have enough information to update my beliefs to make a decision for now that satisfies my accuracy-requirements for this decision.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eStaggering differences are often a sign of a weak research. So take this part with a grain of salt.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n",
            "date_published": "2022-11-25T22:17:00+03:30"
        }, {
            "title": "Power Structure of Social Networks",
            "id": "https://prma.dev/posts/power-structure-of-social-networks/",
            "url": "https://prma.dev/posts/power-structure-of-social-networks/",
            "summary": "Intro Why do some nations fail and rise so quickly? The answer to this questions has a surprisingly relevant answer to the recent migrations from a Twitter to Mastodon.\nPower Centrality Basically the idea is that:\nIn any system of governance the authority is constrained to the resources it has available. And for the authority to make a change, it has to answer to the resource providers. Given a set interdependent institutions one could form check-and-balance system.",
            "content_html": "\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eWhy do some nations fail and rise so quickly?\nThe answer to this questions has a surprisingly relevant answer to the recent migrations from a Twitter to Mastodon.\u003c/p\u003e\n\u003ch2 id=\"power-centrality\"\u003ePower Centrality\u003c/h2\u003e\n\u003cp\u003eBasically the idea is that:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eIn any system of governance the authority is constrained to the resources it has available.\u003c/li\u003e\n\u003cli\u003eAnd for the authority to make a change, it has to answer to the resource providers.\u003c/li\u003e\n\u003cli\u003eGiven a set interdependent institutions one could form check-and-balance system.\u003c/li\u003e\n\u003cli\u003eIf the dependence is not formed in a way that is biased towards zero-sum relationships the authority thrives.\u003c/li\u003e\n\u003cli\u003eFor the society to thrive it should be considered an institution on it\u0026rsquo;s own.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eLet\u0026rsquo;s make a few different forms of government considering the rule\u0026rsquo;s I just discussed.\u003c/p\u003e\n\u003cdiv class=\"note\"\u003e\n\u003cp\u003eAs dependence on involvement of people only comes when governments want more power and cannot retain the resources necessary from the land, High Natural-Resources and High People-involvement tend to be mutually.\u003c/p\u003e\n\u003c/div\u003e\n\u003ch2 id=\"high-centrality-high-natural-resources-low-people-involvement\"\u003eHigh Centrality, High Natural-Resources, Low People-involvement\u003c/h2\u003e\n\u003cp\u003eLet\u0026rsquo;s imagine a dictatorship on a land with rich natural resources. Dictatorship is an strongly centralized form of government. As such, the dictator does not have any dependencies. You might think that the government does need its people. But most of the time, such dictatorship has all that it needs from the naturally available resources.\u003c/p\u003e\n\u003cp\u003eThe dictator does not have to answer to anyone, and they have all the means necessary to make rapid changes, good or bad. The whole of the nation rise and fall quickly. The civic progression does not accumulate in time and only will be there while the dictator let it to be.\u003c/p\u003e\n\u003cp\u003eThe government does not need people uniting, form a danger to the government. Such authorities are highly motivated to bring social conflict, such as racism. Which may even lead to genocide by members of the society.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eThink of: Middle-east with it\u0026#39;s rich natural oil.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"high-centrality-low-natural-resources-low-people-involvement\"\u003eHigh Centrality, Low Natural-Resources, Low People-involvement\u003c/h2\u003e\n\u003cp\u003eNow, let\u0026rsquo;s imagine a dictatorship on a land with no natural resources, and no inclination to involve people.\u003c/p\u003e\n\u003cp\u003eSuch a nation will not flourish. The dictator is extremely constrained in its power.\u003c/p\u003e\n\u003cp\u003eIt has no validity among its people. As such it is unsuccessful in enforcing any law, good or bad. Such a nation sees lots and lots of \u003cem\u003ecoup d\u0026rsquo;Ã©tats\u003c/em\u003e. The authority is more alike a warlord.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eThink of: Central African nations.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"high-centrality-low-natural-resources-high-people-involvement\"\u003eHigh centrality, Low Natural-Resources, High People-involvement\u003c/h2\u003e\n\u003cp\u003eSuch a dictatorship, is a highly populist government. The dictator threats people as the main form of resource. Such nations can rise quickly. But before too long, the authority will figure out that he only needs society\u0026rsquo;s approval, but not its growth. And if you need approval, there is no quicker and better way than a common enemy. As such, such nations become too hostile to other nations. And may end-up using genocide as a means of keeping the country united.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eThink of: Germany during the Hitler era.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"low-centrality-high-natural-resources-low-people-involvement\"\u003eLow Centrality, High Natural-Resources, Low People-involvement\u003c/h2\u003e\n\u003cp\u003eSuch a nation looks great from the outside, but inside? It is polarized to say the least. These nations, just like any other nation with Low-Centrality is stable. The is formed by a group of institutions which keep each other in check. But alas, what good is it, if it is not for people?\u003c/p\u003e\n\u003cp\u003eSuch governments end up becoming extremely rich. But because people are not required for the government to perform, most of what the government is doing is providing value for the few that can provide them the resources they need.\u003c/p\u003e\n\u003cp\u003eSuch governments nations are subject to low progression in the civic laws, are extremely hard to change, and form strong bonds with few entities. As people are seen as a barrier, government\u0026rsquo;s like this tend to have a lot of controversial and theatrical surfaces, but end-up deciding things behind closed doors.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eThink of: USA during recent years, as it managed to put a huge people\u0026#39;s involvement.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"low-centrality-low-natural-resources-low-people-involvement\"\u003eLow Centrality, Low Natural-Resources, Low People-involvement\u003c/h2\u003e\n\u003cp\u003eThese governments are stable, but irrelevant. They fail to bring order, or protection for their people. And they don\u0026rsquo;t provide any infrastructural benefits the society.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eThink of: Afghanistan Right after USA army left it.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"low-centrality-low-natural-resources-high-people-involvement\"\u003eLow Centrality, Low Natural-Resources, High People-involvement\u003c/h2\u003e\n\u003cp\u003eThis, at least for now, seems to be some what the better of them all, but with some caveats. These governments are highly stable, and highly motivated by providing value to the people. They accumulate wealth and culture overtime. They are, also, resilient to hostile neighbours and bad actors. These societies tend to look good on the outside, but much better on the inside.\u003c/p\u003e\n\u003cp\u003eHowever, such governments are only weak to adapt to any radical changes, as the changes only happen when the people will it to happen. That means that these societies tend not to be the leaders or experimenters of different sorts of progress. However, they may end up reaching the top of the leader board in time.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eThink of: Germany, today.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"how-does-it-relate-to-the-twitter-and-fediverse-and-dot-dot-dot\"\u003eHow does it relate to the Twitter and Fediverse and \u0026hellip;?\u003c/h2\u003e\n\u003cp\u003eWell, there is a analogy to be made here.\u003c/p\u003e\n\u003cp\u003eWe can see the body(s) that runs, maintains, develop and moderate a social network as a form of a government. The users as the people and society.\nAnd the way that the proverbial social-network governments are being funded as the determining factor of people\u0026rsquo;s involvement in governance.\u003c/p\u003e\n\u003cp\u003eIn that regard we can think of Twitter, Facebook as highly concentrated. Considering that their power is immensely related to the number of users they have, we may be tempted to see them as somewhat of high in involvement of people.\nbut in actuality, people do not need to be actually participating in governing such a system. As they are the product, and the value comes from external means. That means that the users ended up being the natural resource of the land that is being sold for resources to the external actors.\u003c/p\u003e\n\u003cp\u003eAs such we end up with both exploitation of the users and their lack of ownership of their own data.\u003c/p\u003e\n\u003ch2 id=\"so-what-can-be-the-solution\"\u003eSo, what can be the solution?\u003c/h2\u003e\n\u003cp\u003eConsidering how unfortunate this situation is, there has always been a few different alternatives. Let\u0026rsquo;s just review them.\u003c/p\u003e\n\u003cp\u003eThere are systems that don\u0026rsquo;t count users as product, but as the customer. Such services, though small have a better record of listening to users.\u003c/p\u003e\n\u003cp\u003eHowever, as any centralized system, they are unstable, they remain small, and to keep users, they resort to vendor lock-ins. They also resort advertisement instead of increasing real value. Think of apple with its anti-advertisement campaigns against Microsoft.\u003c/p\u003e\n\u003cp\u003eAnother solution might be highly centralized systems without any sort of resources. These tend to be highly volatile and fast to disappear.\u003c/p\u003e\n\u003cp\u003eSo, decentralization might be the way to go.\u003c/p\u003e\n\u003cp\u003eAs low-centrality but highly-resourcefulness goes, I can only think of mailing groups. Mailing groups stand on the shoulders of mail providers.\u003c/p\u003e\n\u003cp\u003eDecentralized as mailing is, the ecosystem overwhelmingly is provided by a few company that their main products are again, people.\nAs discussed earlier, such systems tend to not have much progress. At least, not for the non-governing bodies. And indeed, that has been true.\nMailing and mailing groups is as user friendly and featureful as they have been 15 years ago.\u003c/p\u003e\n\u003cp\u003eWhich makes us resort to our last option. Low centrality and High involvement of people. Such a system has been the model for open-source development. Where the governance is highly motivated to help the people the same time as the people are highly motivated to help the governance.\nSuch a model has ended up being extended into forms of social governance. Where users fund their instances, help development and do volunteer moderations. And indeed, again, the parallel is not surprising: These systems tend not to have the greatest of the starts, but they end up enduring, and becoming more resilient.\u003c/p\u003e\n\u003cp\u003eMastodon, Pixelfed and other federated, open-sourced social networks, operate in such a model. And I like to think of people moving from Twitter to Mastodon as realizing that they matter and can should be more.\u003c/p\u003e\n\u003ch2 id=\"credit\"\u003eCredit\u003c/h2\u003e\n\u003cp\u003eThis work is highly inspired and heavily reliant on \u003cspan class=\"person p-name\"\u003eDaron Acemoglu\u003c/span\u003e\u0026rsquo;s fantastic book, \u003cem\u003eWhy Nations Fail\u003c/em\u003e. A must read.\u003c/p\u003e\n",
            "date_published": "2022-11-16T00:08:00+03:30"
        }
    ]
    
}
